[aero_log_parser_type_1]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+fds: proto \((?P<ProtoConnNow>\d+),(?P<ProtoConnOpen>\d+),(?P<ProtoConnClose>\d+)\) heartbeat \((?P<HBConnNow>\d+),(?P<HBConnOpen>\d+),(?P<HBConnClose>\d+)\) fabric \((?P<FabricConnNow>\d+),(?P<FabricConnOpen>\d+),(?P<FabricConnClose>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 protoconnnow::$5 protoconnopen::$6 protoconnclose::$7 hbconnnow::$8 hbconnopen::$9 hbconnclose::$10 fabricconnnow::$11 fabricconnopen::$12 FabricConnClose::$13

[aero_log_parser_type_2]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\d+) used-pct (?P<IdxFlashUsePct>\d+) alloc-bytes (?P<IdxFlashAlBt>\d+) alloc-pct (?P<IdxFlashAlPct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 idxflashusebyte::$6 idxflashusepct::$7 idxflashalbt::$8 IdxFlashAlPct::$9

[aero_log_parser_type_3]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system-memory: free-kbytes (?P<FreeMemKB>\d+) free-pct (?P<FreeMemPct>\d+) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 freememkb::$5 freemempct::$6 heapkballoc::$7 heapkbactive::$8 heapkbmapped::$9 HeapEfficPct::$10

[aero_log_parser_type_4]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: expire-threads (?P<nsupExpireThrds>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupExpireThrds::$6

[aero_log_parser_type_5]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 xdr5dc::$6 xdr5lag::$7 xdr5throughput::$8 xdr5inqueue::$9 xdr5outstanding::$10 xdr5doneok::$11 xdr5doneabandon::$12 xdr5donenotfnd::$13 xdr5donefout::$14 xdr5retrnonode::$15 xdr5retrconnrst::$16 xdr5retrdest::$17 xdr5recov::$18 xdr5recovpend::$19 xdr5HotKeys::$20

[aero_log_parser_type_6]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+) cache-read-pct (?P<DevCacheReadPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 devusedbytes::$6 devavailpct::$7 DevCacheReadPct::$8

[aero_log_parser_type_7]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+batch-index: batches \((?P<BatchSuccess>\d+),(?P<BatchError>\d+),(?P<BatchTimeout>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 batchsuccess::$5 batcherror::$6 BatchTimeout::$7

[aero_log_parser_type_8]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+) unavailable-partitions (?P<reUnavail>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 reregime::$6 retx::$7 rerx::$8 resig::$9 reappeals::$10 reUnavail::$11

[aero_log_parser_type_9]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicErr>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrErr>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+),(?P<QueryUdfAbrt>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+),(?P<QueryOpsAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 querybasicok::$6 querybasicerr::$7 querybasicabrt::$8 queryaggrok::$9 queryaggrerr::$10 queryaggrabrt::$11 queryudfok::$12 queryudferr::$13 queryudfabrt::$14 queryopsok::$15 queryopserr::$16 QueryOpsAbrt::$17

[aero_log_parser_type_10]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+dlog: free-pct (?P<xdrDlgFreePct>[0-9\\.]+) reclaimed (?P<xdrDlogReclaim>\d+) glst (?P<xdrDlogGlst>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdrdlgfreepct::$5 xdrdlogreclaim::$6 xdrDlogGlst::$7

[aero_log_parser_type_11]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) fresh-partitions (?P<reFresh>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 retx::$6 rerx::$7 resig::$8 reFresh::$9

[aero_log_parser_type_12]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\) unreplicated-records (?P<ReReplUn>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 rereplalltrgok::$6 rereplalltrgerr::$7 rereplalltrgtou::$8 ReReplUn::$9

[aero_log_parser_type_13]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) set-index-bytes (?P<NsMemSetIdxByte>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) data-bytes (?P<NsMemDataByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsmemtotalbytes::$6 nsmemindexbytes::$7 nsmemsetidxbyte::$8 nsmemsindexbyte::$9 nsmemdatabyte::$10 NsMemUsedPct::$11

[aero_log_parser_type_14]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 scanbasicok::$6 scanbasicerr::$7 scanbasicabrt::$8 scanaggrok::$9 scanaggrerr::$10 scanaggrabrt::$11 scanudfok::$12 scanudferr::$13 ScanUdfAbrt::$14

[aero_log_parser_type_15]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\d+) expire-threads (?P<nsupExpireThrds>\d+) non-expirable (?P<nsupNonExpirabl>\d+) expired \((?P<nsupExpireTotal>\d+),(?P<nsupExpireNow>\d+)\) evicted \((?P<nsupEvictTotal>\d+),(?P<nsupEvictNow>\d+)\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) total-ms (?P<nsupTotalMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupevictthrds::$6 nsupexpirethrds::$7 nsupnonexpirabl::$8 nsupexpiretotal::$9 nsupexpirenow::$10 nsupevicttotal::$11 nsupevictnow::$12 nsupevictttl::$13 nsupTotalMs::$14

[aero_log_parser_type_16]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} client: tsvc \((?P<ClientTsvcErr>\d+),(?P<ClientTsvcTout>\d+)\) proxy \((?P<ClientPrxyOk>\d+),(?P<ClientPrxyErr>\d+),(?P<ClientPrxyTout>\d+)\) read \((?P<ClientReadOk>\d+),(?P<ClientReadErr>\d+),(?P<ClientReadTout>\d+),(?P<ClientReadNFnd>\d+),(?P<ClientReadFltr>\d+)\) write \((?P<ClientWrtOk>\d+),(?P<ClientWrtErr>\d+),(?P<ClientWrtTout>\d+),(?P<ClientWrtFltr>\d+)\) delete \((?P<ClientDelOk>\d+),(?P<ClientDelErr>\d+),(?P<ClientDelTout>\d+),(?P<ClientDelNFnd>\d+),(?P<ClientDelFltr>\d+)\) udf \((?P<ClientUdfOk>\d+),(?P<ClientUdfErr>\d+),(?P<ClientUdfTout>\d+),(?P<ClientUdfFltr>\d+)\) lang \((?P<ClientLangRead>\d+),(?P<ClientLangWrite>\d+),(?P<ClientLangDel>\d+),(?P<ClientlangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 clienttsvcerr::$6 clienttsvctout::$7 clientprxyok::$8 clientprxyerr::$9 clientprxytout::$10 clientreadok::$11 clientreaderr::$12 clientreadtout::$13 clientreadnfnd::$14 clientreadfltr::$15 clientwrtok::$16 clientwrterr::$17 clientwrttout::$18 clientwrtfltr::$19 clientdelok::$20 clientdelerr::$21 clientdeltout::$22 clientdelnfnd::$23 clientdelfltr::$24 clientudfok::$25 clientudferr::$26 clientudftout::$27 clientudffltr::$28 clientlangread::$29 clientlangwrite::$30 clientlangdel::$31 ClientlangErr::$32

[aero_log_parser_type_17]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy: tsvc \((?P<FrPrxyTsvcErr>\d+),(?P<FrPrxyTsvcTout>\d+)\) read \((?P<FrPrxyReadOk>\d+),(?P<FrPrxyReadErr>\d+),(?P<FrPrxyReadTout>\d+),(?P<FrPrxyReadNFnd>\d+)\) write \((?P<FrPrxyWrtOk>\d+),(?P<FrPrxyWrtErr>\d+),(?P<FrPrxyWrtTout>\d+)\) delete \((?P<FrPrxyDelOk>\d+),(?P<FrPrxyDelErr>\d+),(?P<FrPrxyDelTout>\d+),(?P<FrPrxyDelNFnd>\d+)\) udf \((?P<FrPrxyUdfOk>\d+),(?P<FrPrxyUdfErr>\d+),(?P<FrPrxyUdfTout>\d+)\) lang \((?P<FrPrxyLangRead>\d+),(?P<FrPrxyLangWrite>\d+),(?P<FrPrxyLangDel>\d+),(?P<FrPrxylangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 frprxytsvcerr::$6 frprxytsvctout::$7 frprxyreadok::$8 frprxyreaderr::$9 frprxyreadtout::$10 frprxyreadnfnd::$11 frprxywrtok::$12 frprxywrterr::$13 frprxywrttout::$14 frprxydelok::$15 frprxydelerr::$16 frprxydeltout::$17 frprxydelnfnd::$18 frprxyudfok::$19 frprxyudferr::$20 frprxyudftout::$21 frprxylangread::$22 frprxylangwrite::$23 frprxylangdel::$24 FrPrxylangErr::$25

[aero_log_parser_type_18]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) set-index-bytes (?P<NsMemSetIdxByte>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsmemtotalbytes::$6 nsmemindexbytes::$7 nsmemsetidxbyte::$8 nsmemsindexbyte::$9 NsMemUsedPct::$10

[aero_log_parser_type_19]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) tomb-raider-read \((?P<TombDevRd>\d+),(?P<TombDevRdSec>[0-9\\.]+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writeq::$9 writes::$10 writepersec::$11 defragq::$12 defragr::$13 defragrpersec::$14 defragw::$15 defragwpersec::$16 tombdevrd::$17 TombDevRdSec::$18

[aero_log_parser_type_20]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+sub:  1 build $
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_21]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) outstanding (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdr5dc::$5 xdr5lag::$6 xdr5throughput::$7 xdr5latencyms::$8 xdr5inqueue::$9 xdr5outstanding::$10 xdr5doneok::$11 xdr5doneabandon::$12 xdr5donenotfnd::$13 xdr5donefout::$14 xdr5retrconnrst::$15 xdr5retrdest::$16 xdr5recov::$17 xdr5recovpend::$18 xdr5HotKeys::$19

[aero_log_parser_type_22]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\d+) used-pct (?P<IdxFlashUsePct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 idxflashusebyte::$6 IdxFlashUsePct::$7

[aero_log_parser_type_23]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 reregime::$6 retx::$7 rerx::$8 resig::$9 reAppeals::$10

[aero_log_parser_type_24]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+regex:  quiesced this node$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_25]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) write-q (?P<WriteQ>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writes::$9 writepersec::$10 defragq::$11 defragr::$12 defragrpersec::$13 defragw::$14 defragwpersec::$15 WriteQ::$16

[aero_log_parser_type_26]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) client-read (?P<ResmitRead>\d+) client-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) client-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) client-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\) nsup (?P<ResmitNsup>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 resmitmigra::$6 resmitread::$7 resmitwrtdup::$8 resmitwrtrepl::$9 resmitdeldup::$10 resmitdelrepl::$11 resmitudfdup::$12 resmitrepl::$13 resmitbtchdup::$14 resmitudfdupsub::$15 resmitudfrepl::$16 ResmitNsup::$17

[aero_log_parser_type_27]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsmemtotalbytes::$6 nsmemindexbytes::$7 nsmemsindexbyte::$8 NsMemUsedPct::$9

[aero_log_parser_type_28]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) shadow-write-q (?P<ShadowWriteQ>\d+) tomb-raider-read \((?P<TombDevRd>\d+),(?P<TombDevRdSec>[0-9\\.]+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writeq::$9 writes::$10 writepersec::$11 defragq::$12 defragr::$13 defragrpersec::$14 defragw::$15 defragwpersec::$16 shadowwriteq::$17 tombdevrd::$18 TombDevRdSec::$19

[aero_log_parser_type_29]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+quiesced this (?P<thisQuiesce>\d+) node$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 thisQuiesce::$5

[aero_log_parser_type_30]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) shadow-write-q (?P<ShadowWriteQ>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writeq::$9 writes::$10 writepersec::$11 defragq::$12 defragr::$13 defragrpersec::$14 defragw::$15 defragwpersec::$16 ShadowWriteQ::$17

[aero_log_parser_type_31]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_32]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\\[(?P<XdrDcName>[^]]+)\\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\d+) lst (?P<XdrDcLst>\d+) mlst (?P<XdrDcMlst>\d+) \([^)]+\) fnlst (?P<XdrDcFnlst>\d+) \([^)]+\) wslst (?P<XdrDcWslst>\d+) \([^)]+\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) errcl (?P<XdrDcErrcl>\d+) errsrv (?P<XdrDcErrsrv>\d+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdrdcname::$5 xdrdcstate::$6 xdrdctimelag::$7 xdrdclst::$8 xdrdcmlst::$9 xdrdcfnlst::$10 xdrdcwslst::$11 xdrdcshlatms::$12 xdrdcerrcl::$13 xdrdcerrsrv::$14 xdrdcrsasms::$15 XdrDcRsasPct::$16

[aero_log_parser_type_33]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+),(?P<BtSuFPReadFltr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btsufptsvcerr::$6 btsufptsvctout::$7 btsufpreadok::$8 btsufpreaderr::$9 btsufpreadtout::$10 btsufpreadnfnd::$11 BtSuFPReadFltr::$12

[aero_log_parser_type_34]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, (?P<stop>\d+) shutting down$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 signal::$5 stop::$6

[aero_log_parser_type_35]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: info-q (?P<InfoQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 infoq::$5 rwhash::$6 proxyhash::$7 TreeGcQ::$8

[aero_log_parser_type_36]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) data-bytes (?P<NsMemDataByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsmemtotalbytes::$6 nsmemindexbytes::$7 nsmemsindexbyte::$8 nsmemdatabyte::$9 NsMemUsedPct::$10

[aero_log_parser_type_37]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) all-read (?P<ResmitRead>\d+) all-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) all-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) all-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) all-batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\) ops-sub \((?P<ResmitOpsDup>\d+),(?P<ResmitOpsRepl>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 resmitmigra::$6 resmitread::$7 resmitwrtdup::$8 resmitwrtrepl::$9 resmitdeldup::$10 resmitdelrepl::$11 resmitudfdup::$12 resmitrepl::$13 resmitbtchdup::$14 resmitudfdupsub::$15 resmitudfrepl::$16 resmitopsdup::$17 ResmitOpsRepl::$18

[aero_log_parser_type_38]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+summary: throughput (?P<xdrThroughput>\d+) inflight (?P<xdrInFlight>\d+) dlog-outstanding (?P<xdrDlgOutstand>\d+) dlog-delta-per-sec (?P<xdrDlogDeltaSec>[-]*[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdrthroughput::$5 xdrinflight::$6 xdrdlgoutstand::$7 xdrDlogDeltaSec::$8

[aero_log_parser_type_39]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system-memory: free-kbytes (?P<FreeMemKB>\d+) free-pct (?P<FreeMemPct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 freememkb::$5 FreeMemPct::$6

[aero_log_parser_type_40]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} pmem-usage: used-bytes (?P<PmemUseByte>\d+) avail-pct (?P<PmemAvailPct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 pmemusebyte::$6 PmemAvailPct::$7

[aero_log_parser_type_41]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc: Processed: (?P<sindexGcProc>\d+), found:(?P<sindexGcFound>\d+), deleted: (?P<sindexGcDel>\d+): Total time: (?P<sindexGcMs>\d+) ms$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 sindexgcproc::$6 sindexgcfound::$7 sindexgcdel::$8 sindexGcMs::$9

[aero_log_parser_type_42]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<Histogram>[^ ]+) \((?P<total>\d+) total\) msec *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 histogram::$5 total::$6 histogram::$7

[aero_log_parser_type_43]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramCount>[^ ]+) \((?P<total>\d+) total\) count *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 histogramcount::$6 total::$7 histogram::$8

[aero_log_parser_type_44]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 tomball::$6 tombmaster::$7 tombprole::$8 TombNonRepl::$9

[aero_log_parser_type_45]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\d+) master (?P<ObjectsMaster>\d+) prole (?P<ObjectsProle>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 objectsall::$6 objectsmaster::$7 ObjectsProle::$8

[aero_log_parser_type_46]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+regex:  config-set command $
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_47]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\d+) expire-threads (?P<nsupExpireThrds>\d+) master-objects \((?P<nsupMasterObj>\d+),(?P<nsupNonExpirabl>\d+)\) expired \((?P<nsupExpireTotal>\d+),(?P<nsupExpireNow>\d+)\) evicted \((?P<nsupEvictTotal>\d+),(?P<nsupEvictNow>\d+)\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) waits \((?P<nsupGeneWaits>\d+),(?P<nsupClearWaits>\d+)\) total-ms (?P<nsupTotalMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupevictthrds::$6 nsupexpirethrds::$7 nsupmasterobj::$8 nsupnonexpirabl::$9 nsupexpiretotal::$10 nsupexpirenow::$11 nsupevicttotal::$12 nsupevictnow::$13 nsupevictttl::$14 nsupgenewaits::$15 nsupclearwaits::$16 nsupTotalMs::$17

[aero_log_parser_type_48]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<restart>\d+) build (?P<build>[^ ]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 restart::$5 build::$6

[aero_log_parser_type_49]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 querybasicok::$6 querybasicabrt::$7 queryaggrok::$8 queryaggrabrt::$9 queryudfok::$10 QueryUdfErr::$11

[aero_log_parser_type_50]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) build (?P<build>[^ ]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 stop::$5 build::$6

[aero_log_parser_type_51]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) xdr \((?P<TombXdr>\d+),(?P<TombXdrCem>\d+)\) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 tomball::$6 tombxdr::$7 tombxdrcem::$8 tombmaster::$9 tombprole::$10 TombNonRepl::$11

[aero_log_parser_type_52]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+CLUSTER-SIZE (?P<ClusterSize>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 ClusterSize::$5

[aero_log_parser_type_53]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) client-read (?P<ResmitRead>\d+) client-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) client-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) client-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 resmitmigra::$6 resmitread::$7 resmitwrtdup::$8 resmitwrtrepl::$9 resmitdeldup::$10 resmitdelrepl::$11 resmitudfdup::$12 resmitrepl::$13 resmitbtchdup::$14 resmitudfdupsub::$15 ResmitUdfRepl::$16

[aero_log_parser_type_54]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<HistogramCount>[^ ]+) \((?P<total>\d+) total\) count *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 histogramcount::$5 total::$6 histogram::$7

[aero_log_parser_type_55]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} pi-query: short-basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) long-basic \((?P<ScanLongOk>\d+),(?P<ScanLongErr>\d+),(?P<ScanLongAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\) ops-bg \((?P<ScanOpsOk>\d+),(?P<ScanOpsErr>\d+),(?P<ScanOpsAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 scanbasicok::$6 scanbasicerr::$7 scanbasicabrt::$8 scanlongok::$9 scanlongerr::$10 scanlongabrt::$11 scanaggrok::$12 scanaggrerr::$13 scanaggrabrt::$14 scanudfok::$15 scanudferr::$16 scanudfabrt::$17 scanopsok::$18 scanopserr::$19 ScanOpsAbrt::$20

[aero_log_parser_type_56]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-tomb-raid-done: dropped (?P<xdr5tombDrop>\d+) total-ms (?P<xdr5tombMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 xdr5tombdrop::$6 xdr5tombMs::$7

[aero_log_parser_type_57]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: tsvc \((?P<ReReplTsvcErr>\d+),(?P<ReReplTsvcTout>\d+)\) all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\) unreplicated-records (?P<ReReplUn>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 rerepltsvcerr::$6 rerepltsvctout::$7 rereplalltrgok::$8 rereplalltrgerr::$9 rereplalltrgtou::$10 ReReplUn::$11

[aero_log_parser_type_58]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system: total-cpu-pct (?P<TotalCpuPct>\d+) user-cpu-pct (?P<UserCpuPct>\d+) kernel-cpu-pct (?P<KernelCpuPct>\d+) free-mem-kbytes (?P<FreeMemKB>\d+) free-mem-pct (?P<FreeMemPct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 totalcpupct::$5 usercpupct::$6 kernelcpupct::$7 freememkb::$8 FreeMemPct::$9

[aero_log_parser_type_59]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+ \((?P<errCtx>[^)]+)\): \((?P<errC>[^)]+)\) \(repeated:(?P<repeated>\d+)\) (?P<errMessage>.+$)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 errctx::$5 errc::$6 repeated::$7 errMessage::$8

[aero_log_parser_type_60]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\d+) remaining-rx (?P<ApplRemainRx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 applremaintx::$6 applremainrx::$7 applacttx::$8 ApplActRx::$9

[aero_log_parser_type_61]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, shutting down Aerospike Enterprise Edition (?P<stop>\d+) build (?P<build>.+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 signal::$5 stop::$6 build::$7

[aero_log_parser_type_62]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) starting normal shutdown$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 stop::$5

[aero_log_parser_type_63]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<quiesced>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 quiesced::$6

[aero_log_parser_type_64]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 querybasicok::$6 querybasicabrt::$7 queryaggrok::$8 queryaggrabrt::$9 queryudfok::$10 queryudferr::$11 queryopsok::$12 QueryOpsErr::$13

[aero_log_parser_type_65]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_66]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+ \(norepeat:(?P<repeated>\d+)\) \((?P<errCtx>[^)]+)\): \((?P<errC>[^)]+)\) (?P<errMessage>.+$)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 repeated::$5 errctx::$6 errc::$7 errMessage::$8

[aero_log_parser_type_67]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 applremaintx::$6 applacttx::$7 ApplActRx::$8

[aero_log_parser_type_68]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) nsup-delete-q (?P<NsupDelQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 tsvcq::$5 infoq::$6 nsupdelq::$7 rwhash::$8 ProxyHash::$9

[aero_log_parser_type_69]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writeq::$9 writes::$10 writepersec::$11 defragq::$12 defragr::$13 defragrpersec::$14 defragw::$15 DefragWPerSec::$16

[aero_log_parser_type_70]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, aborting Aerospike Enterprise Edition (?P<stop>\d+) build (?P<build>.+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 signal::$5 stop::$6 build::$7

[aero_log_parser_type_71]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-rx (?P<ApplRemainRx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 applremainrx::$6 applacttx::$7 ApplActRx::$8

[aero_log_parser_type_72]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+process: cpu-pct (?P<ProcessCpuPct>\d+) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 processcpupct::$5 heapkballoc::$6 heapkbactive::$7 heapkbmapped::$8 HeapEfficPct::$9

[aero_log_parser_type_73]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+device (?P<Device>[^:]+): used (?P<UsedBytes>\d+), contig-free [^ ]+ \((?P<FreeWBlocks>\d+) wblocks\), swb-free (?P<SwbFree>\d+), w-q (?P<WriteQ>\d+) w-tot (?P<Writes>\d+) \((?P<WritePerSec>[0-9\\.]+)/s\), defrag-q (?P<DefragQ>\d+) defrag-tot (?P<DefragR>\d+) \((?P<DefragRPerSec>[0-9\\.]+)/s\) defrag-w-tot (?P<DefragW>\d+) \((?P<DefragWPerSec>[0-9\\.]+)/s\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 device::$5 usedbytes::$6 freewblocks::$7 swbfree::$8 writeq::$9 writes::$10 writepersec::$11 defragq::$12 defragr::$13 defragrpersec::$14 defragw::$15 DefragWPerSec::$16

[aero_log_parser_type_74]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+),(?P<BtSuFPReadFltr>\d+)\) write \((?P<BtSuFPWriteOk>\d+),(?P<BtSuFPWriteErr>\d+),(?P<BtSuFPWriteTout>\d+),(?P<BtSuFPWriteFltr>\d+)\) delete \((?P<BtSuFPDelOk>\d+),(?P<BtSuFPDelErr>\d+),(?P<BtSuFPDelTout>\d+),(?P<BtSuFPDelNFnd>\d+),(?P<BtSuFPDelFltr>\d+)\) udf \((?P<BtSuFPUdfOk>\d+),(?P<BtSuFPUdfErr>\d+),(?P<BtSuFPUdfTout>\d+),(?P<BtSuFPUdfFltr>\d+)\) lang \((?P<BtSuFPLangRdOk>\d+),(?P<BtSuFPLangWtOk>\d+),(?P<BtSuFPLangDlOk>\d+),(?P<BtSuFPLangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btsufptsvcerr::$6 btsufptsvctout::$7 btsufpreadok::$8 btsufpreaderr::$9 btsufpreadtout::$10 btsufpreadnfnd::$11 btsufpreadfltr::$12 btsufpwriteok::$13 btsufpwriteerr::$14 btsufpwritetout::$15 btsufpwritefltr::$16 btsufpdelok::$17 btsufpdelerr::$18 btsufpdeltout::$19 btsufpdelnfnd::$20 btsufpdelfltr::$21 btsufpudfok::$22 btsufpudferr::$23 btsufpudftout::$24 btsufpudffltr::$25 btsufplangrdok::$26 btsufplangwtok::$27 btsufplangdlok::$28 BtSuFPLangErr::$29

[aero_log_parser_type_75]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} set-index-usage: used-bytes (?P<setidxUsedBytes>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 setidxUsedBytes::$6

[aero_log_parser_type_76]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-usage: used-bytes (?P<idxUsedBytes>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 idxUsedBytes::$6

[aero_log_parser_type_77]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) nsup-delete-q (?P<NsupDelQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 tsvcq::$5 infoq::$6 nsupdelq::$7 rwhash::$8 proxyhash::$9 TreeGcQ::$10

[aero_log_parser_type_78]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+),(?P<BtcSubReadFltr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btcsubtsvcerr::$6 btcsubtsvctout::$7 btcsubprxyok::$8 btcsubprxyerr::$9 btcsubprxytout::$10 btcsubreadok::$11 btcsubreaderr::$12 btcsubreadtout::$13 btcsubreadnfnd::$14 BtcSubReadFltr::$15

[aero_log_parser_type_79]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) dup-res \((?P<ResmitRead>\d+),(?P<ResmitWrtDup>\d+),(?P<ResmitDelDup>\d+),(?P<ResmitUdfDupSub>\d+),(?P<ResmitBRDup>\d+),(?P<ResmitBWDup>\d+),(?P<ResmitBDDup>\d+),(?P<ResmitBUDup>\d+),(?P<ResmitUdfDupSub>\d+),(?P<ResmitOpsDup>\d+)\) repl-ping \((?P<ResmitRPRepl>\d+),(?P<ResmitBPRepl>\d+)\) repl-write \((?P<ResmitWrtRepl>\d+),(?P<ResmitDelRepl>\d+),(?P<ResmitRepl>\d+),(?P<ResmitBWRepl>\d+),(?P<ResmitBDRepl>\d+),(?P<ResmitBURepl>\d+),(?P<ResmitUdfRepl>\d+),(?P<ResmitOpsRepl>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 resmitmigra::$6 resmitread::$7 resmitwrtdup::$8 resmitdeldup::$9 resmitudfdupsub::$10 resmitbrdup::$11 resmitbwdup::$12 resmitbddup::$13 resmitbudup::$14 resmitudfdupsub::$15 resmitopsdup::$16 resmitrprepl::$17 resmitbprepl::$18 resmitwrtrepl::$19 resmitdelrepl::$20 resmitrepl::$21 resmitbwrepl::$22 resmitbdrepl::$23 resmitburepl::$24 resmitudfrepl::$25 ResmitOpsRepl::$26

[aero_log_parser_type_80]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc-done: cleaned \((?P<sindexGcClnA>\d+),(?P<sindexGcClnC>\d+)\) total-ms (?P<sindexGcMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 sindexgcclna::$6 sindexgcclnc::$7 sindexGcMs::$8

[aero_log_parser_type_81]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+batch-index: batches \((?P<BatchSuccess>\d+),(?P<BatchError>\d+),(?P<BatchTimeout>\d+)\) delays (?P<BatchDelay>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 batchsuccess::$5 batcherror::$6 batchtimeout::$7 BatchDelay::$8

[aero_log_parser_type_82]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc-done: processed (?P<sindexGcProc>\d+) found (?P<sindexGcFound>\d+) deleted (?P<sindexGcDel>\d+) total-ms (?P<sindexGcMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 sindexgcproc::$6 sindexgcfound::$7 sindexgcdel::$8 sindexGcMs::$9

[aero_log_parser_type_83]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\) ops-bg \((?P<ScanOpsOk>\d+),(?P<ScanOpsErr>\d+),(?P<ScanOpsAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 scanbasicok::$6 scanbasicerr::$7 scanbasicabrt::$8 scanaggrok::$9 scanaggrerr::$10 scanaggrabrt::$11 scanudfok::$12 scanudferr::$13 scanudfabrt::$14 scanopsok::$15 scanopserr::$16 ScanOpsAbrt::$17

[aero_log_parser_type_84]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+config-set (?P<configset>\d+) command completed: params (?P<command>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 configset::$5 command::$6

[aero_log_parser_type_85]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stopDone>\d+) finished clean shutdown - exiting$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 stopDone::$5

[aero_log_parser_type_86]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, (?P<stop>\d+) starting normal shutdown$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 signal::$5 stop::$6

[aero_log_parser_type_87]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-from-proxy: write \((?P<XdrWrFrPrxOk>\d+),(?P<XdrWrFrPrxErr>\d+),(?P<XdrWrFrPrxTout>\d+)\) delete \((?P<XdrDelFrPrxOk>\d+),(?P<XdrDelFrPrxErr>\d+),(?P<XdrDelFrPrxTout>\d+),(?P<XdrDelFrPrxNFou>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 xdrwrfrprxok::$6 xdrwrfrprxerr::$7 xdrwrfrprxtout::$8 xdrdelfrprxok::$9 xdrdelfrprxerr::$10 xdrdelfrprxtout::$11 XdrDelFrPrxNFou::$12

[aero_log_parser_type_88]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 earlyfaildemar::$5 earlyfailtsvc::$6 earlyfailbchsub::$7 EarlyFailUdfSub::$8

[aero_log_parser_type_89]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_90]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\d+) lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdr5dc::$5 xdr5nodes::$6 xdr5lag::$7 xdr5throughput::$8 xdr5latencyms::$9 xdr5inqueue::$10 xdr5outstanding::$11 xdr5doneok::$12 xdr5doneabandon::$13 xdr5donenotfnd::$14 xdr5donefout::$15 xdr5retrnonode::$16 xdr5retrconnrst::$17 xdr5retrdest::$18 xdr5recov::$19 xdr5recovpend::$20 xdr5HotKeys::$21

[aero_log_parser_type_91]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} dup-res: ask (?P<dupresAsk>\d+) respond \((?P<dupresRespRd>\d+),(?P<dupresRespNo>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 dupresask::$6 dupresresprd::$7 dupresRespNo::$8

[aero_log_parser_type_92]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+ \((?P<warnCtx>[^)]+)\): \((?P<warnC>[^)]+)\) \(repeated:(?P<repeated>\d+)\) (?P<warnMessage>.+$)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 warnctx::$5 warnc::$6 repeated::$7 warnMessage::$8

[aero_log_parser_type_93]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-pmem-usage: used-bytes (?P<IdxPmemUseByte>\d+) used-pct (?P<IdxPmemUsePct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 idxpmemusebyte::$6 IdxPmemUsePct::$7

[aero_log_parser_type_94]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} migrations: remaining \((?P<MigraRemainTx>\d+),(?P<MigraRemainRx>\d+),(?P<MigraRemainSig>\d+)\) active \((?P<MigraActiveTx>\d+),(?P<MigraActiveRx>\d+),(?P<MigraActiveSig>\d+)\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 migraremaintx::$6 migraremainrx::$7 migraremainsig::$8 migraactivetx::$9 migraactiverx::$10 migraactivesig::$11 MigraCompletPct::$12

[aero_log_parser_type_95]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+heartbeat-received: self (?P<HBSelf>\d+) foreign (?P<HBForeign>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 hbself::$5 HBForeign::$6

[aero_log_parser_type_96]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramUs>[^ ]+) \((?P<total>\d+) total\) usec *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 histogramus::$6 total::$7 histogram::$8

[aero_log_parser_type_97]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} si-query: short-basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicErr>\d+),(?P<QueryBasicAbrt>\d+)\) long-basic \((?P<QueryLongOk>\d+),(?P<QueryLongErr>\d+),(?P<QueryLongAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrErr>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+),(?P<QueryUdfAbrt>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+),(?P<QueryOpsAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 querybasicok::$6 querybasicerr::$7 querybasicabrt::$8 querylongok::$9 querylongerr::$10 querylongabrt::$11 queryaggrok::$12 queryaggrerr::$13 queryaggrabrt::$14 queryudfok::$15 queryudferr::$16 queryudfabrt::$17 queryopsok::$18 queryopserr::$19 QueryOpsAbrt::$20

[aero_log_parser_type_98]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+sub:  quiesced this 1 node$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_99]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+),(?P<BtcSubReadFltr>\d+)\) write \((?P<BtcSubWriteOk>\d+),(?P<BtcSubWriteErr>\d+),(?P<BtcSubWriteTout>\d+),(?P<BtcSubWriteFltr>\d+)\) delete \((?P<BtcSubDelOk>\d+),(?P<BtcSubDelErr>\d+),(?P<BtcSubDelTout>\d+),(?P<BtcSubDelNFnd>\d+),(?P<BtcSubDelFltr>\d+)\) udf \((?P<BtcSubUdfOk>\d+),(?P<BtcSubUdfErr>\d+),(?P<BtcSubUdfTout>\d+),(?P<BtcSubUdfFltr>\d+)\) lang \((?P<BtcSubLangRdOk>\d+),(?P<BtcSubLangWtOk>\d+),(?P<BtcSubLangDlOk>\d+),(?P<BtcSubLangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btcsubtsvcerr::$6 btcsubtsvctout::$7 btcsubprxyok::$8 btcsubprxyerr::$9 btcsubprxytout::$10 btcsubreadok::$11 btcsubreaderr::$12 btcsubreadtout::$13 btcsubreadnfnd::$14 btcsubreadfltr::$15 btcsubwriteok::$16 btcsubwriteerr::$17 btcsubwritetout::$18 btcsubwritefltr::$19 btcsubdelok::$20 btcsubdelerr::$21 btcsubdeltout::$22 btcsubdelnfnd::$23 btcsubdelfltr::$24 btcsubudfok::$25 btcsubudferr::$26 btcsubudftout::$27 btcsubudffltr::$28 btcsublangrdok::$29 btcsublangwtok::$30 btcsublangdlok::$31 BtcSubLangErr::$32

[aero_log_parser_type_100]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} ops-sub: tsvc \((?P<OpsSubTsvcErr>\d+),(?P<OpsSubTsvcTout>\d+)\) write \((?P<OpsSubWrOk>\d+),(?P<OpsSubWrErr>\d+),(?P<OpsSubWrTout>\d+),(?P<OpsSubWrFOut>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 opssubtsvcerr::$6 opssubtsvctout::$7 opssubwrok::$8 opssubwrerr::$9 opssubwrtout::$10 OpsSubWrFOut::$11

[aero_log_parser_type_101]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} breached stop-writes limit \((?P<stopWrReason>[^)]+)\), sys-memory pct:(?P<stopWrSysMemPct>\d+), indexes-memory sz:(?P<stopWrIdxMemSz>\d+) \((?P<stopWrIdx>\d+) + (?P<stopWrSetIdx>\d+) + (?P<stopWrSetSIdx>\d+)\), data avail-pct:(?P<stopWrDatAvail>\d+) used-pct:(?P<stopWrUsed>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 stopwrreason::$6 stopwrsysmempct::$7 stopwridxmemsz::$8 stopwridx::$9 stopwrsetidx::$10 stopwrsetsidx::$11 stopwrdatavail::$12 stopWrUsed::$13

[aero_log_parser_type_102]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+regex:  un-quiesced this node$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_103]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<Histogram>[^ ]+) \((?P<total>\d+) total\) msec *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 histogram::$6 total::$7 histogram::$8

[aero_log_parser_type_104]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+regex:  build $
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_105]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+ \(norepeat:(?P<repeated>\d+)\) \((?P<warnCtx>[^)]+)\): \((?P<warnC>[^)]+)\) (?P<warnMessage>.+$)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 repeated::$5 warnctx::$6 warnc::$7 warnMessage::$8

[aero_log_parser_type_106]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\\[(?P<XdrDcName>[^]]+)\\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\d+) lst (?P<XdrDcLst>\d+) mlst (?P<XdrDcMlst>\d+) \([^)]+\) fnlst (?P<XdrDcFnlst>\d+) \([^)]+\) wslst (?P<XdrDcWslst>\d+) \([^)]+\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+) con (?P<XdrDcOpenConn>\d+) errcl (?P<XdrDcErrcl>\d+) errsrv (?P<XdrDcErrsrv>\d+) sz (?P<XdrDcSz>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdrdcname::$5 xdrdcstate::$6 xdrdctimelag::$7 xdrdclst::$8 xdrdcmlst::$9 xdrdcfnlst::$10 xdrdcwslst::$11 xdrdcshlatms::$12 xdrdcrsasms::$13 xdrdcrsaspct::$14 xdrdcopenconn::$15 xdrdcerrcl::$16 xdrdcerrsrv::$17 XdrDcSz::$18

[aero_log_parser_type_107]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) all-read (?P<ResmitRead>\d+) all-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) all-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) all-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) all-batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 resmitmigra::$6 resmitread::$7 resmitwrtdup::$8 resmitwrtrepl::$9 resmitdeldup::$10 resmitdelrepl::$11 resmitudfdup::$12 resmitrepl::$13 resmitbtchdup::$14 resmitudfdupsub::$15 ResmitUdfRepl::$16

[aero_log_parser_type_108]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-usage: used-bytes (?P<sidxUsedBytes>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 sidxUsedBytes::$6

[aero_log_parser_type_109]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+) tsvc-ops-sub (?P<EarlyFailOpsSub>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 earlyfaildemar::$5 earlyfailtsvc::$6 earlyfailfrmprx::$7 earlyfailbchsub::$8 earlyffpbchsub::$9 earlyfailudfsub::$10 EarlyFailOpsSub::$11

[aero_log_parser_type_110]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+sub:  config-set 1 command $
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_111]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<HistogramUs>[^ ]+) \((?P<total>\d+) total\) usec *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 histogramus::$5 total::$6 histogram::$7

[aero_log_parser_type_112]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: evict-threads (?P<nsupEvictThrds>\d+) evict-ttl (?P<nsupEvictTtl>\d+) evict-void-time \((?P<nsupEvictVoidEf>\d+),(?P<nsupEvictVoidSp>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupevictthrds::$6 nsupevictttl::$7 nsupevictvoidef::$8 nsupEvictVoidSp::$9

[aero_log_parser_type_113]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) xdr (?P<TombXdr>\d+) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 tomball::$6 tombxdr::$7 tombmaster::$8 tombprole::$9 TombNonRepl::$10

[aero_log_parser_type_114]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\d+) latency-ms (?P<xdr5latencyms>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdr5dc::$5 xdr5nodes::$6 xdr5latencyms::$7

[aero_log_parser_type_115]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+skew-ms (?P<ClockSkewMs>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 ClockSkewMs::$5

[aero_log_parser_type_116]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 scanbasicok::$6 scanbasicerr::$7 ScanBasicAbrt::$8

[aero_log_parser_type_117]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+detail: sh (?P<xdrSh>\d+) ul (?P<xdrUl>\d+) lg (?P<xdrLg>\d+) rlg (?P<xdrRlg>\d+) rlgi (?P<xdrRlgi>\d+) rlgo (?P<xdrRlgo>\d+) lproc (?P<xdrLproc>\d+) rproc (?P<xdrRproc>\d+) lkdproc (?P<xdrLkdproc>\d+) errcl (?P<xdrErrcl>\d+) errsrv (?P<xdrErrSrv>\d+) hkskip (?P<xdrHkskip>\d+) hkf (?P<xdrHkf>\d+) flat (?P<xdrFlat>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdrsh::$5 xdrul::$6 xdrlg::$7 xdrrlg::$8 xdrrlgi::$9 xdrrlgo::$10 xdrlproc::$11 xdrrproc::$12 xdrlkdproc::$13 xdrerrcl::$14 xdrerrsrv::$15 xdrhkskip::$16 xdrhkf::$17 xdrFlat::$18

[aero_log_parser_type_118]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramSize>[^ ]+) \((?P<total>\d+) total\) bytes *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 histogramsize::$6 total::$7 histogram::$8

[aero_log_parser_type_119]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\d+) master (?P<ObjectsMaster>\d+) prole (?P<ObjectsProle>\d+) non-replica (?P<ObjectsNonProle>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 objectsall::$6 objectsmaster::$7 objectsprole::$8 ObjectsNonProle::$9

[aero_log_parser_type_120]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+process: cpu-pct (?P<ProcessCpuPct>\d+) threads \((?P<ThreadJoin>\d+),(?P<ThreadDetach>\d+),(?P<ThreadPoolTot>\d+),(?P<ThreadPoolAct>\d+)\) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 processcpupct::$5 threadjoin::$6 threaddetach::$7 threadpooltot::$8 threadpoolact::$9 heapkballoc::$10 heapkbactive::$11 heapkbmapped::$12 HeapEfficPct::$13

[aero_log_parser_type_121]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 rereplalltrgok::$6 rereplalltrgerr::$7 ReReplAllTrgTou::$8

[aero_log_parser_type_122]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btsufptsvcerr::$6 btsufptsvctout::$7 btsufpreadok::$8 btsufpreaderr::$9 btsufpreadtout::$10 BtSuFPReadNFnd::$11

[aero_log_parser_type_123]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} udf-sub: tsvc \((?P<UdfSubTsvcErr>\d+),(?P<UdfSubTsvcTout>\d+)\) udf \((?P<UdfSubUdfOk>\d+),(?P<UdfSubUdfErr>\d+),(?P<UdfSubUdfTout>\d+),(?P<UdfSubUdfFOut>\d+)\) lang \((?P<UdfSubLangRdOk>\d+),(?P<UdfSubLangWrOk>\d+),(?P<UdfSubLangDelOk>\d+),(?P<UdfSubLangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 udfsubtsvcerr::$6 udfsubtsvctout::$7 udfsubudfok::$8 udfsubudferr::$9 udfsubudftout::$10 udfsubudffout::$11 udfsublangrdok::$12 udfsublangwrok::$13 udfsublangdelok::$14 UdfSubLangErr::$15

[aero_log_parser_type_124]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 reregime::$6 retx::$7 rerx::$8 reSig::$9

[aero_log_parser_type_125]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system: total-cpu-pct (?P<TotalCpuPct>\d+) user-cpu-pct (?P<UserCpuPct>\d+) kernel-cpu-pct (?P<KernelCpuPct>\d+) free-mem-kbytes (?P<FreeMemKB>\d+) free-mem-pct (?P<FreeMemPct>\d+) thp-mem-kbytes (?P<THPMemKB>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 totalcpupct::$5 usercpupct::$6 kernelcpupct::$7 freememkb::$8 freemempct::$9 THPMemKB::$10

[aero_log_parser_type_126]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<HistogramSize>[^ ]+) \((?P<total>\d+) total\) bytes *(?P<histogram>.*)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 histogramsize::$5 total::$6 histogram::$7

[aero_log_parser_type_127]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+sub:  un-quiesced this 0 node$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4

[aero_log_parser_type_128]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) shutting down$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 stop::$5

[aero_log_parser_type_129]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: evict-ttl (?P<nsupEvictTtl>\d+) evict-void-time \((?P<nsupEvictVoidEf>\d+),(?P<nsupEvictVoidSp>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupevictttl::$6 nsupevictvoidef::$7 nsupEvictVoidSp::$8

[aero_log_parser_type_130]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+allowing (?P<MigraFillCt>\d+) fill-migrations after (?P<MigraFillSec>\d+) seconds delay$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 migrafillct::$5 MigraFillSec::$6

[aero_log_parser_type_131]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdr5dc::$5 xdr5lag::$6 xdr5throughput::$7 xdr5latencyms::$8 xdr5inqueue::$9 xdr5outstanding::$10 xdr5doneok::$11 xdr5doneabandon::$12 xdr5donenotfnd::$13 xdr5donefout::$14 xdr5retrnonode::$15 xdr5retrconnrst::$16 xdr5retrdest::$17 xdr5recov::$18 xdr5recovpend::$19 xdr5HotKeys::$20

[aero_log_parser_type_132]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} breached eviction limit \((?P<evictReason>[^)]+)\), sys-memory pct:(?P<evictSysMemPct>\d+), indexes-memory sz:(?P<evictIdxMemSz>\d+) \((?P<evictIdx>\d+) + (?P<evictSetIdx>\d+) + (?P<evictSetSIdx>\d+)\), index-device sz:(?P<evictIdxDev>\d+) used-pct (?P<evictUsedPct>\d+), data used-pct:(?P<evictDataUsed>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 evictreason::$6 evictsysmempct::$7 evictidxmemsz::$8 evictidx::$9 evictsetidx::$10 evictsetsidx::$11 evictidxdev::$12 evictusedpct::$13 evictDataUsed::$14

[aero_log_parser_type_133]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} udf-sub: tsvc \((?P<UdfSubTsvcErr>\d+),(?P<UdfSubTsvcTout>\d+)\) udf \((?P<UdfSubUdfOk>\d+),(?P<UdfSubUdfErr>\d+),(?P<UdfSubUdfOkTout>\d+)\) lang \((?P<UdfSubLangRdOk>\d+),(?P<UdfSubLangWrOk>\d+),(?P<UdfSubLangDelOk>\d+),(?P<UdfSubLangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 udfsubtsvcerr::$6 udfsubtsvctout::$7 udfsubudfok::$8 udfsubudferr::$9 udfsubudfoktout::$10 udfsublangrdok::$11 udfsublangwrok::$12 udfsublangdelok::$13 UdfSubLangErr::$14

[aero_log_parser_type_134]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy: tsvc \((?P<FrPrxyTsvcErr>\d+),(?P<FrPrxyTsvcTout>\d+)\) read \((?P<FrPrxyReadOk>\d+),(?P<FrPrxyReadErr>\d+),(?P<FrPrxyReadTout>\d+),(?P<FrPrxyReadNFnd>\d+),(?P<FrPrxyReadFltr>\d+)\) write \((?P<FrPrxyWrtOk>\d+),(?P<FrPrxyWrtErr>\d+),(?P<FrPrxyWrtTout>\d+),(?P<FrPrxyWrtFltr>\d+)\) delete \((?P<FrPrxyDelOk>\d+),(?P<FrPrxyDelErr>\d+),(?P<FrPrxyDelTout>\d+),(?P<FrPrxyDelNFnd>\d+),(?P<FrPrxyDelFltr>\d+)\) udf \((?P<FrPrxyUdfOk>\d+),(?P<FrPrxyUdfErr>\d+),(?P<FrPrxyUdfTout>\d+),(?P<FrPrxyUdfFltr>\d+)\) lang \((?P<FrPrxyLangRead>\d+),(?P<FrPrxyLangWrite>\d+),(?P<FrPrxyLangDel>\d+),(?P<FrPrxylangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 frprxytsvcerr::$6 frprxytsvctout::$7 frprxyreadok::$8 frprxyreaderr::$9 frprxyreadtout::$10 frprxyreadnfnd::$11 frprxyreadfltr::$12 frprxywrtok::$13 frprxywrterr::$14 frprxywrttout::$15 frprxywrtfltr::$16 frprxydelok::$17 frprxydelerr::$18 frprxydeltout::$19 frprxydelnfnd::$20 frprxydelfltr::$21 frprxyudfok::$22 frprxyudferr::$23 frprxyudftout::$24 frprxyudffltr::$25 frprxylangread::$26 frprxylangwrite::$27 frprxylangdel::$28 FrPrxylangErr::$29

[aero_log_parser_type_135]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 xdr5dc::$5 xdr5lag::$6 xdr5throughput::$7 xdr5latencyms::$8 xdr5inqueue::$9 xdr5outstanding::$10 xdr5doneok::$11 xdr5doneabandon::$12 xdr5donenotfnd::$13 xdr5donefout::$14 xdr5retrconnrst::$15 xdr5retrdest::$16 xdr5recov::$17 xdr5recovpend::$18 xdr5HotKeys::$19

[aero_log_parser_type_136]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} Records: (?P<nsupMasterObj>\d+), (?P<nsupNonExpirabl>\d+) 0-vt, (?P<nsupExpireTotal>\d+)\((?P<nsupExpireNow>\d+)\) expired, (?P<nsupEvictTotal>\d+)\((?P<nsupEvictNow>\d+)\) evicted, (?P<nsupSetDelTotal>\d+)\((?P<nsupSetDelNow>\d+)\) set deletes. Evict ttl: (?P<nsupEvictTtl>[0-9\\-]+). Waits: (?P<nsupSetWaits>\d+),(?P<nsupClearWaits>\d+),(?P<nsupGeneWaits>\d+). Total time: (?P<nsupTotalMs>\d+) ms$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 nsupmasterobj::$6 nsupnonexpirabl::$7 nsupexpiretotal::$8 nsupexpirenow::$9 nsupevicttotal::$10 nsupevictnow::$11 nsupsetdeltotal::$12 nsupsetdelnow::$13 nsupevictttl::$14 nsupsetwaits::$15 nsupclearwaits::$16 nsupgenewaits::$17 nsupTotalMs::$18

[aero_log_parser_type_137]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 tsvcq::$5 infoq::$6 rwhash::$7 proxyhash::$8 TreeGcQ::$9

[aero_log_parser_type_138]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 device::$6 usedbytes::$7 freewblocks::$8 writes::$9 writepersec::$10 defragq::$11 defragr::$12 defragrpersec::$13 defragw::$14 DefragWPerSec::$15

[aero_log_parser_type_139]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} migrations: remaining \((?P<MigraRemainTx>\d+),(?P<MigraRemainRx>\d+)\) active \((?P<MigraActiveTx>\d+),(?P<MigraActiveRx>\d+)\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 migraremaintx::$6 migraremainrx::$7 migraactivetx::$8 migraactiverx::$9 MigraCompletPct::$10

[aero_log_parser_type_140]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+fabric-bytes-per-second: bulk \((?P<FabricBulkTx>\d+),(?P<FabricBulkRx>\d+)\) ctrl \((?P<FabricCtrlTx>\d+),(?P<FabricCtrlRx>\d+)\) meta \((?P<FabricMetaTx>\d+),(?P<FabricMetaRx>\d+)\) rw \((?P<FabricRwTx>\d+),(?P<FabricRwRx>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 fabricbulktx::$5 fabricbulkrx::$6 fabricctrltx::$7 fabricctrlrx::$8 fabricmetatx::$9 fabricmetarx::$10 fabricrwtx::$11 FabricRwRx::$12

[aero_log_parser_type_141]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} client: tsvc \((?P<ClientTsvcErr>\d+),(?P<ClientTsvcTout>\d+)\) proxy \((?P<ClientPrxyOk>\d+),(?P<ClientPrxyErr>\d+),(?P<ClientPrxyTout>\d+)\) read \((?P<ClientReadOk>\d+),(?P<ClientReadErr>\d+),(?P<ClientReadTout>\d+),(?P<ClientReadNFnd>\d+)\) write \((?P<ClientWrtOk>\d+),(?P<ClientWrtErr>\d+),(?P<ClientWrtTout>\d+)\) delete \((?P<ClientDelOk>\d+),(?P<ClientDelErr>\d+),(?P<ClientDelTout>\d+),(?P<ClientDelNFnd>\d+)\) udf \((?P<ClientUdfOk>\d+),(?P<ClientUdfErr>\d+),(?P<ClientUdfTout>\d+)\) lang \((?P<ClientLangRead>\d+),(?P<ClientLangWrite>\d+),(?P<ClientLangDel>\d+),(?P<ClientlangErr>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 clienttsvcerr::$6 clienttsvctout::$7 clientprxyok::$8 clientprxyerr::$9 clientprxytout::$10 clientreadok::$11 clientreaderr::$12 clientreadtout::$13 clientreadnfnd::$14 clientwrtok::$15 clientwrterr::$16 clientwrttout::$17 clientdelok::$18 clientdelerr::$19 clientdeltout::$20 clientdelnfnd::$21 clientudfok::$22 clientudferr::$23 clientudftout::$24 clientlangread::$25 clientlangwrite::$26 clientlangdel::$27 ClientlangErr::$28

[aero_log_parser_type_142]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 btcsubtsvcerr::$6 btcsubtsvctout::$7 btcsubprxyok::$8 btcsubprxyerr::$9 btcsubprxytout::$10 btcsubreadok::$11 btcsubreaderr::$12 btcsubreadtout::$13 BtcSubReadNFnd::$14

[aero_log_parser_type_143]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 devusedbytes::$6 DevAvailPct::$7

[aero_log_parser_type_144]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} special-errors: key-busy (?P<ErrKeyBusy>\d+) record-too-big (?P<ErrRecTooBig>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 errkeybusy::$6 ErrRecTooBig::$7

[aero_log_parser_type_145]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-client: write \((?P<XdrClWrOk>\d+),(?P<XdrClWrErr>\d+),(?P<XdrClWrTout>\d+)\) delete \((?P<XdrClDelOk>\d+),(?P<XdrClDelErr>\d+),(?P<XdrClDelTout>\d+),(?P<XdrClDelNFou>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 xdrclwrok::$6 xdrclwrerr::$7 xdrclwrtout::$8 xdrcldelok::$9 xdrcldelerr::$10 xdrcldeltout::$11 XdrClDelNFou::$12

[aero_log_parser_type_146]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: tsvc \((?P<ReReplTsvcErr>\d+),(?P<ReReplTsvcTout>\d+)\) all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 rerepltsvcerr::$6 rerepltsvctout::$7 rereplalltrgok::$8 rereplalltrgerr::$9 ReReplAllTrgTou::$10

[aero_log_parser_type_147]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 earlyfaildemar::$5 earlyfailtsvc::$6 earlyfailfrmprx::$7 earlyfailbchsub::$8 earlyffpbchsub::$9 EarlyFailUdfSub::$10

[aero_log_parser_type_148]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} data-usage: used-bytes (?P<dataUsedBytes>\d+) avail-pct (?P<dataAvailPct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 datausedbytes::$6 dataAvailPct::$7

[aero_log_parser_type_149]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 retx::$6 rerx::$7 reSig::$8

[aero_log_parser_type_150]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+) dead-partitions (?P<reDead>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 reregime::$6 retx::$7 rerx::$8 resig::$9 reappeals::$10 reDead::$11

[aero_log_parser_type_151]
REGEX = ^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-pmem-usage: used-bytes (?P<SdxPmemUseByte>\d+) used-pct (?P<SdxPmemUsePct>\d+)$
FORMAT = datetimestamp::$1 timezone::$2 log_level::$3 source_location::$4 namespace::$5 sdxpmemusebyte::$6 SdxPmemUsePct::$7

