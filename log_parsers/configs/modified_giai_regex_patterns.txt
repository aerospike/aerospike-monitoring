# Giai line ==> - "in-progress: tsvc-q (?P<TsvcQ>\\d+) info-q (?P<InfoQ>\\d+) nsup-delete-q (?P<NsupDelQ>\\d+) rw-hash (?P<RWHash>\\d+) proxy-hash (?P<ProxyHash>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) nsup-delete-q (?P<NsupDelQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+)$
# Giai line ==> - "Jan 02 2006 15:04:05.000 "
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+Jan 02 2006 15:04:05.000$
# Giai line ==> - "{(?P<Namespace>[^}]+)} client: tsvc \\((?P<ClientTsvcErr>\\d+),(?P<ClientTsvcTout>\\d+)\\) proxy \\((?P<ClientPrxyOk>\\d+),(?P<ClientPrxyErr>\\d+),(?P<ClientPrxyTout>\\d+)\\) read \\((?P<ClientReadOk>\\d+),(?P<ClientReadErr>\\d+),(?P<ClientReadTout>\\d+),(?P<ClientReadNFnd>\\d+)\\) write \\((?P<ClientWrtOk>\\d+),(?P<ClientWrtErr>\\d+),(?P<ClientWrtTout>\\d+)\\) delete \\((?P<ClientDelOk>\\d+),(?P<ClientDelErr>\\d+),(?P<ClientDelTout>\\d+),(?P<ClientDelNFnd>\\d+)\\) udf \\((?P<ClientUdfOk>\\d+),(?P<ClientUdfErr>\\d+),(?P<ClientUdfTout>\\d+)\\) lang \\((?P<ClientLangRead>\\d+),(?P<ClientLangWrite>\\d+),(?P<ClientLangDel>\\d+),(?P<ClientlangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} client: tsvc \((?P<ClientTsvcErr>\d+),(?P<ClientTsvcTout>\d+)\) proxy \((?P<ClientPrxyOk>\d+),(?P<ClientPrxyErr>\d+),(?P<ClientPrxyTout>\d+)\) read \((?P<ClientReadOk>\d+),(?P<ClientReadErr>\d+),(?P<ClientReadTout>\d+),(?P<ClientReadNFnd>\d+)\) write \((?P<ClientWrtOk>\d+),(?P<ClientWrtErr>\d+),(?P<ClientWrtTout>\d+)\) delete \((?P<ClientDelOk>\d+),(?P<ClientDelErr>\d+),(?P<ClientDelTout>\d+),(?P<ClientDelNFnd>\d+)\) udf \((?P<ClientUdfOk>\d+),(?P<ClientUdfErr>\d+),(?P<ClientUdfTout>\d+)\) lang \((?P<ClientLangRead>\d+),(?P<ClientLangWrite>\d+),(?P<ClientLangDel>\d+),(?P<ClientlangErr>\d+)\)$
# Giai line ==> - " \\(norepeat:(?P<repeated>\\d+)\\) \\((?P<warnCtx>[^)]+)\\): \\((?P<warnC>[^)]+)\\) (?P<warnMessage>.+$)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\(norepeat:(?P<repeated>\d+)\) \((?P<warnCtx>[^)]+)\): \((?P<warnC>[^)]+)\) (?P<warnMessage>.+$)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\\d+) used-pct (?P<IdxFlashUsePct>\\d+) alloc-bytes (?P<IdxFlashAlBt>\\d+) alloc-pct (?P<IdxFlashAlPct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\d+) used-pct (?P<IdxFlashUsePct>\d+) alloc-bytes (?P<IdxFlashAlBt>\d+) alloc-pct (?P<IdxFlashAlPct>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\) fresh-partitions (?P<reFresh>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) fresh-partitions (?P<reFresh>\d+)$
# Giai line ==> - " \\(norepeat:(?P<repeated>\\d+)\\) \\((?P<errCtx>[^)]+)\\): \\((?P<errC>[^)]+)\\) (?P<errMessage>.+$)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\(norepeat:(?P<repeated>\d+)\) \((?P<errCtx>[^)]+)\): \((?P<errC>[^)]+)\) (?P<errMessage>.+$)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} migrations: remaining \\((?P<MigraRemainTx>\\d+),(?P<MigraRemainRx>\\d+),(?P<MigraRemainSig>\\d+)\\) active \\((?P<MigraActiveTx>\\d+),(?P<MigraActiveRx>\\d+),(?P<MigraActiveSig>\\d+)\\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} migrations: remaining \((?P<MigraRemainTx>\d+),(?P<MigraRemainRx>\d+),(?P<MigraRemainSig>\d+)\) active \((?P<MigraActiveTx>\d+),(?P<MigraActiveRx>\d+),(?P<MigraActiveSig>\d+)\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} nsup-start: evict-threads (?P<nsupEvictThrds>\\d+) evict-ttl (?P<nsupEvictTtl>\\d+) evict-void-time \\((?P<nsupEvictVoidEf>\\d+),(?P<nsupEvictVoidSp>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: evict-threads (?P<nsupEvictThrds>\d+) evict-ttl (?P<nsupEvictTtl>\d+) evict-void-time \((?P<nsupEvictVoidEf>\d+),(?P<nsupEvictVoidSp>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\\d+) index-bytes (?P<NsMemIndexBytes>\\d+) sindex-bytes (?P<NsMemSindexByte>\\d+) data-bytes (?P<NsMemDataByte>\\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) data-bytes (?P<NsMemDataByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} ops-sub: tsvc \\((?P<OpsSubTsvcErr>\\d+),(?P<OpsSubTsvcTout>\\d+)\\) write \\((?P<OpsSubWrOk>\\d+),(?P<OpsSubWrErr>\\d+),(?P<OpsSubWrTout>\\d+),(?P<OpsSubWrFOut>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} ops-sub: tsvc \((?P<OpsSubTsvcErr>\d+),(?P<OpsSubTsvcTout>\d+)\) write \((?P<OpsSubWrOk>\d+),(?P<OpsSubWrErr>\d+),(?P<OpsSubWrTout>\d+),(?P<OpsSubWrFOut>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\\d+) remaining-rx (?P<ApplRemainRx>\\d+) active \\((?P<ApplActTx>\\d+),(?P<ApplActRx>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\d+) remaining-rx (?P<ApplRemainRx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
# Giai line ==> - "histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramCount>[^ ]+) \\((?P<total>\\d+) total\\) count *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramCount>[^ ]+) \((?P<total>\d+) total\) count *(?P<histogram>.*)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\\d+) master (?P<ObjectsMaster>\\d+) prole (?P<ObjectsProle>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\d+) master (?P<ObjectsMaster>\d+) prole (?P<ObjectsProle>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} sindex-gc-done: cleaned \\((?P<sindexGcClnA>\\d+),(?P<sindexGcClnC>\\d+)\\) total-ms (?P<sindexGcMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc-done: cleaned \((?P<sindexGcClnA>\d+),(?P<sindexGcClnC>\d+)\) total-ms (?P<sindexGcMs>\d+)$
# Giai line ==> - "heartbeat-received: self (?P<HBSelf>\\d+) foreign (?P<HBForeign>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+heartbeat-received: self (?P<HBSelf>\d+) foreign (?P<HBForeign>\d+)$
# Giai line ==> - "fabric-bytes-per-second: bulk \\((?P<FabricBulkTx>\\d+),(?P<FabricBulkRx>\\d+)\\) ctrl \\((?P<FabricCtrlTx>\\d+),(?P<FabricCtrlRx>\\d+)\\) meta \\((?P<FabricMetaTx>\\d+),(?P<FabricMetaRx>\\d+)\\) rw \\((?P<FabricRwTx>\\d+),(?P<FabricRwRx>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+fabric-bytes-per-second: bulk \((?P<FabricBulkTx>\d+),(?P<FabricBulkRx>\d+)\) ctrl \((?P<FabricCtrlTx>\d+),(?P<FabricCtrlRx>\d+)\) meta \((?P<FabricMetaTx>\d+),(?P<FabricMetaRx>\d+)\) rw \((?P<FabricRwTx>\d+),(?P<FabricRwRx>\d+)\)$
# Giai line ==> - "early-fail: demarshal (?P<EarlyFailDemar>\\d+) tsvc-client (?P<EarlyFailTsvc>\\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\\d+) tsvc-ops-sub (?P<EarlyFailOpsSub>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+) tsvc-ops-sub (?P<EarlyFailOpsSub>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\\d+) expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\)$
# Giai line ==> - "system: total-cpu-pct (?P<TotalCpuPct>\\d+) user-cpu-pct (?P<UserCpuPct>\\d+) kernel-cpu-pct (?P<KernelCpuPct>\\d+) free-mem-kbytes (?P<FreeMemKB>\\d+) free-mem-pct (?P<FreeMemPct>\\d+) thp-mem-kbytes (?P<THPMemKB>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system: total-cpu-pct (?P<TotalCpuPct>\d+) user-cpu-pct (?P<UserCpuPct>\d+) kernel-cpu-pct (?P<KernelCpuPct>\d+) free-mem-kbytes (?P<FreeMemKB>\d+) free-mem-pct (?P<FreeMemPct>\d+) thp-mem-kbytes (?P<THPMemKB>\d+)$
# Giai line ==> - "\\[(?P<XdrDcName>[^]]+)\\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\\d+) lst (?P<XdrDcLst>\\d+) mlst (?P<XdrDcMlst>\\d+) \\([^)]+\\) fnlst (?P<XdrDcFnlst>\\d+) \\([^)]+\\) wslst (?P<XdrDcWslst>\\d+) \\([^)]+\\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+) con (?P<XdrDcOpenConn>\\d+) errcl (?P<XdrDcErrcl>\\d+) errsrv (?P<XdrDcErrsrv>\\d+) sz (?P<XdrDcSz>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\[(?P<XdrDcName>[^]]+)\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\d+) lst (?P<XdrDcLst>\d+) mlst (?P<XdrDcMlst>\d+) \([^)]+\) fnlst (?P<XdrDcFnlst>\d+) \([^)]+\) wslst (?P<XdrDcWslst>\d+) \([^)]+\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+) con (?P<XdrDcOpenConn>\d+) errcl (?P<XdrDcErrcl>\d+) errsrv (?P<XdrDcErrsrv>\d+) sz (?P<XdrDcSz>\d+)$
# Giai line ==> - "in-progress: tsvc-q (?P<TsvcQ>\\d+) info-q (?P<InfoQ>\\d+) rw-hash (?P<RWHash>\\d+) proxy-hash (?P<ProxyHash>\\d+) tree-gc-q (?P<TreeGcQ>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} breached eviction limit \\((?P<evictReason>[^)]+)\\), sys-memory pct:(?P<evictSysMemPct>\\d+), indexes-memory sz:(?P<evictIdxMemSz>\\d+) \\((?P<evictIdx>\\d+) + (?P<evictSetIdx>\\d+) + (?P<evictSetSIdx>\\d+)\\), index-device sz:(?P<evictIdxDev>\\d+) used-pct (?P<evictUsedPct>\\d+), data used-pct:(?P<evictDataUsed>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} breached eviction limit \((?P<evictReason>[^)]+)\), sys-memory pct:(?P<evictSysMemPct>\d+), indexes-memory sz:(?P<evictIdxMemSz>\d+) \((?P<evictIdx>\d+) + (?P<evictSetIdx>\d+) + (?P<evictSetSIdx>\d+)\), index-device sz:(?P<evictIdxDev>\d+) used-pct (?P<evictUsedPct>\d+), data used-pct:(?P<evictDataUsed>\d+)$
# Giai line ==> - "(?P<stopDone>\\d+) finished clean shutdown - exiting"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stopDone>\d+) finished clean shutdown - exiting$
# Giai line ==> - "{(?P<Namespace>[^}]+)} pi-query: short-basic \\((?P<ScanBasicOk>\\d+),(?P<ScanBasicErr>\\d+),(?P<ScanBasicAbrt>\\d+)\\) long-basic \\((?P<ScanLongOk>\\d+),(?P<ScanLongErr>\\d+),(?P<ScanLongAbrt>\\d+)\\) aggr \\((?P<ScanAggrOk>\\d+),(?P<ScanAggrErr>\\d+),(?P<ScanAggrAbrt>\\d+)\\) udf-bg \\((?P<ScanUdfOk>\\d+),(?P<ScanUdfErr>\\d+),(?P<ScanUdfAbrt>\\d+)\\) ops-bg \\((?P<ScanOpsOk>\\d+),(?P<ScanOpsErr>\\d+),(?P<ScanOpsAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} pi-query: short-basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) long-basic \((?P<ScanLongOk>\d+),(?P<ScanLongErr>\d+),(?P<ScanLongAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\) ops-bg \((?P<ScanOpsOk>\d+),(?P<ScanOpsErr>\d+),(?P<ScanOpsAbrt>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} udf-sub: tsvc \\((?P<UdfSubTsvcErr>\\d+),(?P<UdfSubTsvcTout>\\d+)\\) udf \\((?P<UdfSubUdfOk>\\d+),(?P<UdfSubUdfErr>\\d+),(?P<UdfSubUdfOkTout>\\d+)\\) lang \\((?P<UdfSubLangRdOk>\\d+),(?P<UdfSubLangWrOk>\\d+),(?P<UdfSubLangDelOk>\\d+),(?P<UdfSubLangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} udf-sub: tsvc \((?P<UdfSubTsvcErr>\d+),(?P<UdfSubTsvcTout>\d+)\) udf \((?P<UdfSubUdfOk>\d+),(?P<UdfSubUdfErr>\d+),(?P<UdfSubUdfOkTout>\d+)\) lang \((?P<UdfSubLangRdOk>\d+),(?P<UdfSubLangWrOk>\d+),(?P<UdfSubLangDelOk>\d+),(?P<UdfSubLangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} index-pmem-usage: used-bytes (?P<IdxPmemUseByte>\\d+) used-pct (?P<IdxPmemUsePct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-pmem-usage: used-bytes (?P<IdxPmemUseByte>\d+) used-pct (?P<IdxPmemUsePct>\d+)$
# Giai line ==> - "histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramUs>[^ ]+) \\((?P<total>\\d+) total\\) usec *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramUs>[^ ]+) \((?P<total>\d+) total\) usec *(?P<histogram>.*)$
# Giai line ==> - "CLUSTER-SIZE (?P<ClusterSize>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+CLUSTER-SIZE (?P<ClusterSize>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} client: tsvc \\((?P<ClientTsvcErr>\\d+),(?P<ClientTsvcTout>\\d+)\\) proxy \\((?P<ClientPrxyOk>\\d+),(?P<ClientPrxyErr>\\d+),(?P<ClientPrxyTout>\\d+)\\) read \\((?P<ClientReadOk>\\d+),(?P<ClientReadErr>\\d+),(?P<ClientReadTout>\\d+),(?P<ClientReadNFnd>\\d+),(?P<ClientReadFltr>\\d+)\\) write \\((?P<ClientWrtOk>\\d+),(?P<ClientWrtErr>\\d+),(?P<ClientWrtTout>\\d+),(?P<ClientWrtFltr>\\d+)\\) delete \\((?P<ClientDelOk>\\d+),(?P<ClientDelErr>\\d+),(?P<ClientDelTout>\\d+),(?P<ClientDelNFnd>\\d+),(?P<ClientDelFltr>\\d+)\\) udf \\((?P<ClientUdfOk>\\d+),(?P<ClientUdfErr>\\d+),(?P<ClientUdfTout>\\d+),(?P<ClientUdfFltr>\\d+)\\) lang \\((?P<ClientLangRead>\\d+),(?P<ClientLangWrite>\\d+),(?P<ClientLangDel>\\d+),(?P<ClientlangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} client: tsvc \((?P<ClientTsvcErr>\d+),(?P<ClientTsvcTout>\d+)\) proxy \((?P<ClientPrxyOk>\d+),(?P<ClientPrxyErr>\d+),(?P<ClientPrxyTout>\d+)\) read \((?P<ClientReadOk>\d+),(?P<ClientReadErr>\d+),(?P<ClientReadTout>\d+),(?P<ClientReadNFnd>\d+),(?P<ClientReadFltr>\d+)\) write \((?P<ClientWrtOk>\d+),(?P<ClientWrtErr>\d+),(?P<ClientWrtTout>\d+),(?P<ClientWrtFltr>\d+)\) delete \((?P<ClientDelOk>\d+),(?P<ClientDelErr>\d+),(?P<ClientDelTout>\d+),(?P<ClientDelNFnd>\d+),(?P<ClientDelFltr>\d+)\) udf \((?P<ClientUdfOk>\d+),(?P<ClientUdfErr>\d+),(?P<ClientUdfTout>\d+),(?P<ClientUdfFltr>\d+)\) lang \((?P<ClientLangRead>\d+),(?P<ClientLangWrite>\d+),(?P<ClientLangDel>\d+),(?P<ClientlangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\\d+) active \\((?P<ApplActTx>\\d+),(?P<ApplActRx>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-tx (?P<ApplRemainTx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\\d+) index-bytes (?P<NsMemIndexBytes>\\d+) set-index-bytes (?P<NsMemSetIdxByte>\\d+) sindex-bytes (?P<NsMemSindexByte>\\d+) data-bytes (?P<NsMemDataByte>\\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) set-index-bytes (?P<NsMemSetIdxByte>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) data-bytes (?P<NsMemDataByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} dup-res: ask (?P<dupresAsk>\\d+) respond \\((?P<dupresRespRd>\\d+),(?P<dupresRespNo>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} dup-res: ask (?P<dupresAsk>\d+) respond \((?P<dupresRespRd>\d+),(?P<dupresRespNo>\d+)\)$
# Giai line ==> - "histogram dump: (?P<Histogram>[^ ]+) \\((?P<total>\\d+) total\\) msec *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<Histogram>[^ ]+) \((?P<total>\d+) total\) msec *(?P<histogram>.*)$
# Giai line ==> - "process: cpu-pct (?P<ProcessCpuPct>\\d+) heap-kbytes \\((?P<HeapKBAlloc>\\d+),(?P<HeapKBActive>\\d+),(?P<HeapKBMapped>\\d+)\\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+process: cpu-pct (?P<ProcessCpuPct>\d+) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
# Giai line ==> - "in-progress: info-q (?P<InfoQ>\\d+) rw-hash (?P<RWHash>\\d+) proxy-hash (?P<ProxyHash>\\d+) tree-gc-q (?P<TreeGcQ>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: info-q (?P<InfoQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
# Giai line ==> - "applied cluster size (?P<ClusterSize>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+applied cluster size (?P<ClusterSize>\d+)$
# Giai line ==> - "system-memory: free-kbytes (?P<FreeMemKB>\\d+) free-pct (?P<FreeMemPct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system-memory: free-kbytes (?P<FreeMemKB>\d+) free-pct (?P<FreeMemPct>\d+)$
# Giai line ==> - "histogram dump: (?P<HistogramCount>[^ ]+) \\((?P<total>\\d+) total\\) count *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<HistogramCount>[^ ]+) \((?P<total>\d+) total\) count *(?P<histogram>.*)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\\d+) index-bytes (?P<NsMemIndexBytes>\\d+) set-index-bytes (?P<NsMemSetIdxByte>\\d+) sindex-bytes (?P<NsMemSindexByte>\\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) set-index-bytes (?P<NsMemSetIdxByte>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\\d+) expire-threads (?P<nsupExpireThrds>\\d+) non-expirable (?P<nsupNonExpirabl>\\d+) expired \\((?P<nsupExpireTotal>\\d+),(?P<nsupExpireNow>\\d+)\\) evicted \\((?P<nsupEvictTotal>\\d+),(?P<nsupEvictNow>\\d+)\\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) total-ms (?P<nsupTotalMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\d+) expire-threads (?P<nsupExpireThrds>\d+) non-expirable (?P<nsupNonExpirabl>\d+) expired \((?P<nsupExpireTotal>\d+),(?P<nsupExpireNow>\d+)\) evicted \((?P<nsupEvictTotal>\d+),(?P<nsupEvictNow>\d+)\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) total-ms (?P<nsupTotalMs>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\\d+) master (?P<ObjectsMaster>\\d+) prole (?P<ObjectsProle>\\d+) non-replica (?P<ObjectsNonProle>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} objects: all (?P<ObjectsAll>\d+) master (?P<ObjectsMaster>\d+) prole (?P<ObjectsProle>\d+) non-replica (?P<ObjectsNonProle>\d+)$
# Giai line ==> - "device (?P<Device>[^:]+): used (?P<UsedBytes>\\d+), contig-free [^ ]+ \\((?P<FreeWBlocks>\\d+) wblocks\\), swb-free (?P<SwbFree>\\d+), w-q (?P<WriteQ>\\d+) w-tot (?P<Writes>\\d+) \\((?P<WritePerSec>[0-9\\.]+)/s\\), defrag-q (?P<DefragQ>\\d+) defrag-tot (?P<DefragR>\\d+) \\((?P<DefragRPerSec>[0-9\\.]+)/s\\) defrag-w-tot (?P<DefragW>\\d+) \\((?P<DefragWPerSec>[0-9\\.]+)/s\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+device (?P<Device>[^:]+): used (?P<UsedBytes>\d+), contig-free [^ ]+ \((?P<FreeWBlocks>\d+) wblocks\), swb-free (?P<SwbFree>\d+), w-q (?P<WriteQ>\d+) w-tot (?P<Writes>\d+) \((?P<WritePerSec>[0-9\\.]+)/s\), defrag-q (?P<DefragQ>\d+) defrag-tot (?P<DefragR>\d+) \((?P<DefragRPerSec>[0-9\\.]+)/s\) defrag-w-tot (?P<DefragW>\d+) \((?P<DefragWPerSec>[0-9\\.]+)/s\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} nsup-start: evict-ttl (?P<nsupEvictTtl>\\d+) evict-void-time \\((?P<nsupEvictVoidEf>\\d+),(?P<nsupEvictVoidSp>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: evict-ttl (?P<nsupEvictTtl>\d+) evict-void-time \((?P<nsupEvictVoidEf>\d+),(?P<nsupEvictVoidSp>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} re-repl: tsvc \\((?P<ReReplTsvcErr>\\d+),(?P<ReReplTsvcTout>\\d+)\\) all-triggers \\((?P<ReReplAllTrgOk>\\d+),(?P<ReReplAllTrgErr>\\d+),(?P<ReReplAllTrgTou>\\d+)\\) unreplicated-records (?P<ReReplUn>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: tsvc \((?P<ReReplTsvcErr>\d+),(?P<ReReplTsvcTout>\d+)\) all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\) unreplicated-records (?P<ReReplUn>\d+)$
# Giai line ==> - " \\((?P<errCtx>[^)]+)\\): \\((?P<errC>[^)]+)\\) \\(repeated:(?P<repeated>\\d+)\\) (?P<errMessage>.+$)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\((?P<errCtx>[^)]+)\): \((?P<errC>[^)]+)\) \(repeated:(?P<repeated>\d+)\) (?P<errMessage>.+$)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} re-repl: tsvc \\((?P<ReReplTsvcErr>\\d+),(?P<ReReplTsvcTout>\\d+)\\) all-triggers \\((?P<ReReplAllTrgOk>\\d+),(?P<ReReplAllTrgErr>\\d+),(?P<ReReplAllTrgTou>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: tsvc \((?P<ReReplTsvcErr>\d+),(?P<ReReplTsvcTout>\d+)\) all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\)$
# Giai line ==> - "(?P<stop>\\d+) shutting down"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) shutting down$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write-q (?P<WriteQ>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\) shadow-write-q (?P<ShadowWriteQ>\\d+) tomb-raider-read \\((?P<TombDevRd>\\d+),(?P<TombDevRdSec>[0-9\\.]+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) shadow-write-q (?P<ShadowWriteQ>\d+) tomb-raider-read \((?P<TombDevRd>\d+),(?P<TombDevRdSec>[0-9\\.]+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} batch-sub: tsvc \\((?P<BtcSubTsvcErr>\\d+),(?P<BtcSubTsvcTout>\\d+)\\) proxy \\((?P<BtcSubPrxyOk>\\d+),(?P<BtcSubPrxyErr>\\d+),(?P<BtcSubPrxyTout>\\d+)\\) read \\((?P<BtcSubReadOk>\\d+),(?P<BtcSubReadErr>\\d+),(?P<BtcSubReadTout>\\d+),(?P<BtcSubReadNFnd>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} si-query: short-basic \\((?P<QueryBasicOk>\\d+),(?P<QueryBasicErr>\\d+),(?P<QueryBasicAbrt>\\d+)\\) long-basic \\((?P<QueryLongOk>\\d+),(?P<QueryLongErr>\\d+),(?P<QueryLongAbrt>\\d+)\\) aggr \\((?P<QueryAggrOk>\\d+),(?P<QueryAggrErr>\\d+),(?P<QueryAggrAbrt>\\d+)\\) udf-bg \\((?P<QueryUdfOk>\\d+),(?P<QueryUdfErr>\\d+),(?P<QueryUdfAbrt>\\d+)\\) ops-bg \\((?P<QueryOpsOk>\\d+),(?P<QueryOpsErr>\\d+),(?P<QueryOpsAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} si-query: short-basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicErr>\d+),(?P<QueryBasicAbrt>\d+)\) long-basic \((?P<QueryLongOk>\d+),(?P<QueryLongErr>\d+),(?P<QueryLongAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrErr>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+),(?P<QueryUdfAbrt>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+),(?P<QueryOpsAbrt>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} query: basic \\((?P<QueryBasicOk>\\d+),(?P<QueryBasicAbrt>\\d+)\\) aggr \\((?P<QueryAggrOk>\\d+),(?P<QueryAggrAbrt>\\d+)\\) udf-bg \\((?P<QueryUdfOk>\\d+),(?P<QueryUdfErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+)\)$
# Giai line ==> - "detail: sh (?P<xdrSh>\\d+) ul (?P<xdrUl>\\d+) lg (?P<xdrLg>\\d+) rlg (?P<xdrRlg>\\d+) rlgi (?P<xdrRlgi>\\d+) rlgo (?P<xdrRlgo>\\d+) lproc (?P<xdrLproc>\\d+) rproc (?P<xdrRproc>\\d+) lkdproc (?P<xdrLkdproc>\\d+) errcl (?P<xdrErrcl>\\d+) errsrv (?P<xdrErrSrv>\\d+) hkskip (?P<xdrHkskip>\\d+) hkf (?P<xdrHkf>\\d+) flat (?P<xdrFlat>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+detail: sh (?P<xdrSh>\d+) ul (?P<xdrUl>\d+) lg (?P<xdrLg>\d+) rlg (?P<xdrRlg>\d+) rlgi (?P<xdrRlgi>\d+) rlgo (?P<xdrRlgo>\d+) lproc (?P<xdrLproc>\d+) rproc (?P<xdrRproc>\d+) lkdproc (?P<xdrLkdproc>\d+) errcl (?P<xdrErrcl>\d+) errsrv (?P<xdrErrSrv>\d+) hkskip (?P<xdrHkskip>\d+) hkf (?P<xdrHkf>\d+) flat (?P<xdrFlat>\d+)$
# Giai line ==> - "system-memory: free-kbytes (?P<FreeMemKB>\\d+) free-pct (?P<FreeMemPct>\\d+) heap-kbytes \\((?P<HeapKBAlloc>\\d+),(?P<HeapKBActive>\\d+),(?P<HeapKBMapped>\\d+)\\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system-memory: free-kbytes (?P<FreeMemKB>\d+) free-pct (?P<FreeMemPct>\d+) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
# Giai line ==> - "\\[(?P<XdrDcName>[^]]+)\\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\\d+) lst (?P<XdrDcLst>\\d+) mlst (?P<XdrDcMlst>\\d+) \\([^)]+\\) fnlst (?P<XdrDcFnlst>\\d+) \\([^)]+\\) wslst (?P<XdrDcWslst>\\d+) \\([^)]+\\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) errcl (?P<XdrDcErrcl>\\d+) errsrv (?P<XdrDcErrsrv>\\d+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\[(?P<XdrDcName>[^]]+)\]: dc-state (?P<XdrDcState>[^ ]+) timelag-sec (?P<XdrDcTimelag>\d+) lst (?P<XdrDcLst>\d+) mlst (?P<XdrDcMlst>\d+) \([^)]+\) fnlst (?P<XdrDcFnlst>\d+) \([^)]+\) wslst (?P<XdrDcWslst>\d+) \([^)]+\) shlat-ms (?P<XdrDcShlatMs>[0-9\\.]+) errcl (?P<XdrDcErrcl>\d+) errsrv (?P<XdrDcErrsrv>\d+) rsas-ms (?P<XdrDcRsasMs>[0-9\\.]+) rsas-pct (?P<XdrDcRsasPct>[0-9\\.]+)$
# Giai line ==> - "batch-index: batches \\((?P<BatchSuccess>\\d+),(?P<BatchError>\\d+),(?P<BatchTimeout>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+batch-index: batches \((?P<BatchSuccess>\d+),(?P<BatchError>\d+),(?P<BatchTimeout>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\\d+) xdr (?P<TombXdr>\\d+) master (?P<TombMaster>\\d+) prole (?P<TombProle>\\d+) non-replica (?P<TombNonRepl>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) xdr (?P<TombXdr>\d+) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} index-usage: used-bytes (?P<idxUsedBytes>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-usage: used-bytes (?P<idxUsedBytes>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\) write-q (?P<WriteQ>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) write-q (?P<WriteQ>\d+)$
# Giai line ==> - "collecting ttl & object size info"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+collecting ttl & object size info$
# Giai line ==> - "{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\\d+) client-read (?P<ResmitRead>\\d+) client-write \\((?P<ResmitWrtDup>\\d+),(?P<ResmitWrtRepl>\\d+)\\) client-delete \\((?P<ResmitDelDup>\\d+),(?P<ResmitDelRepl>\\d+)\\) client-udf \\((?P<ResmitUdfDup>\\d+),(?P<ResmitRepl>\\d+)\\) batch-sub (?P<ResmitBtchDup>\\d+) udf-sub \\((?P<ResmitUdfDupSub>\\d+),(?P<ResmitUdfRepl>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) client-read (?P<ResmitRead>\d+) client-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) client-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) client-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} re-repl: all-triggers \\((?P<ReReplAllTrgOk>\\d+),(?P<ReReplAllTrgErr>\\d+),(?P<ReReplAllTrgTou>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\)$
# Giai line ==> - "histogram dump: {(?P<HistogramSize>[^ ]+) \\((?P<total>\\d+) total\\) bytes *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<HistogramSize>[^ ]+) \((?P<total>\d+) total\) bytes *(?P<histogram>.*)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\\d+) master (?P<TombMaster>\\d+) prole (?P<TombProle>\\d+) non-replica (?P<TombNonRepl>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
# Giai line ==> - "dlog: free-pct (?P<xdrDlgFreePct>[0-9\\.]+) reclaimed (?P<xdrDlogReclaim>\\d+) glst (?P<xdrDlogGlst>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+dlog: free-pct (?P<xdrDlgFreePct>[0-9\\.]+) reclaimed (?P<xdrDlogReclaim>\d+) glst (?P<xdrDlogGlst>\d+)$
# Giai line ==> - "histogram dump: (?P<HistogramUs>[^ ]+) \\((?P<total>\\d+) total\\) usec *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: (?P<HistogramUs>[^ ]+) \((?P<total>\d+) total\) usec *(?P<histogram>.*)$
# Giai line ==> - "Jan 02 2006 15:04:05 "
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+Jan 02 2006 15:04:05$
# Giai line ==> - "(?P<signal>[^ ]+) received, (?P<stop>\\d+) shutting down"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, (?P<stop>\d+) shutting down$
# Giai line ==> - "{(?P<Namespace>[^}]+)} sindex-gc-done: processed (?P<sindexGcProc>\\d+) found (?P<sindexGcFound>\\d+) deleted (?P<sindexGcDel>\\d+) total-ms (?P<sindexGcMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc-done: processed (?P<sindexGcProc>\d+) found (?P<sindexGcFound>\d+) deleted (?P<sindexGcDel>\d+) total-ms (?P<sindexGcMs>\d+)$
# Giai line ==> - "xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\\d+) latency-ms (?P<xdr5latencyms>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\d+) latency-ms (?P<xdr5latencyms>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} re-repl: all-triggers \\((?P<ReReplAllTrgOk>\\d+),(?P<ReReplAllTrgErr>\\d+),(?P<ReReplAllTrgTou>\\d+)\\) unreplicated-records (?P<ReReplUn>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} re-repl: all-triggers \((?P<ReReplAllTrgOk>\d+),(?P<ReReplAllTrgErr>\d+),(?P<ReReplAllTrgTou>\d+)\) unreplicated-records (?P<ReReplUn>\d+)$
# Giai line ==> - "(?P<stop>\\d+) starting normal shutdown"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) starting normal shutdown$
# Giai line ==> - "summary: throughput (?P<xdrThroughput>\\d+) inflight (?P<xdrInFlight>\\d+) dlog-outstanding (?P<xdrDlgOutstand>\\d+) dlog-delta-per-sec (?P<xdrDlogDeltaSec>[-]*[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+summary: throughput (?P<xdrThroughput>\d+) inflight (?P<xdrInFlight>\d+) dlog-outstanding (?P<xdrDlgOutstand>\d+) dlog-delta-per-sec (?P<xdrDlogDeltaSec>[-]*[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} from-proxy: tsvc \\((?P<FrPrxyTsvcErr>\\d+),(?P<FrPrxyTsvcTout>\\d+)\\) read \\((?P<FrPrxyReadOk>\\d+),(?P<FrPrxyReadErr>\\d+),(?P<FrPrxyReadTout>\\d+),(?P<FrPrxyReadNFnd>\\d+),(?P<FrPrxyReadFltr>\\d+)\\) write \\((?P<FrPrxyWrtOk>\\d+),(?P<FrPrxyWrtErr>\\d+),(?P<FrPrxyWrtTout>\\d+),(?P<FrPrxyWrtFltr>\\d+)\\) delete \\((?P<FrPrxyDelOk>\\d+),(?P<FrPrxyDelErr>\\d+),(?P<FrPrxyDelTout>\\d+),(?P<FrPrxyDelNFnd>\\d+),(?P<FrPrxyDelFltr>\\d+)\\) udf \\((?P<FrPrxyUdfOk>\\d+),(?P<FrPrxyUdfErr>\\d+),(?P<FrPrxyUdfTout>\\d+),(?P<FrPrxyUdfFltr>\\d+)\\) lang \\((?P<FrPrxyLangRead>\\d+),(?P<FrPrxyLangWrite>\\d+),(?P<FrPrxyLangDel>\\d+),(?P<FrPrxylangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy: tsvc \((?P<FrPrxyTsvcErr>\d+),(?P<FrPrxyTsvcTout>\d+)\) read \((?P<FrPrxyReadOk>\d+),(?P<FrPrxyReadErr>\d+),(?P<FrPrxyReadTout>\d+),(?P<FrPrxyReadNFnd>\d+),(?P<FrPrxyReadFltr>\d+)\) write \((?P<FrPrxyWrtOk>\d+),(?P<FrPrxyWrtErr>\d+),(?P<FrPrxyWrtTout>\d+),(?P<FrPrxyWrtFltr>\d+)\) delete \((?P<FrPrxyDelOk>\d+),(?P<FrPrxyDelErr>\d+),(?P<FrPrxyDelTout>\d+),(?P<FrPrxyDelNFnd>\d+),(?P<FrPrxyDelFltr>\d+)\) udf \((?P<FrPrxyUdfOk>\d+),(?P<FrPrxyUdfErr>\d+),(?P<FrPrxyUdfTout>\d+),(?P<FrPrxyUdfFltr>\d+)\) lang \((?P<FrPrxyLangRead>\d+),(?P<FrPrxyLangWrite>\d+),(?P<FrPrxyLangDel>\d+),(?P<FrPrxylangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \\((?P<BtSuFPTsvcErr>\\d+),(?P<BtSuFPTsvcTout>\\d+)\\) read \\((?P<BtSuFPReadOk>\\d+),(?P<BtSuFPReadErr>\\d+),(?P<BtSuFPReadTout>\\d+),(?P<BtSuFPReadNFnd>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+)\)$
# Giai line ==> - "[A-Z][a-z]{2} [0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2} " # syslog edition
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$
# Giai line ==> - "(?P<stop>\\d+) build (?P<build>[^ ]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<stop>\d+) build (?P<build>[^ ]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \\((?P<BtSuFPTsvcErr>\\d+),(?P<BtSuFPTsvcTout>\\d+)\\) read \\((?P<BtSuFPReadOk>\\d+),(?P<BtSuFPReadErr>\\d+),(?P<BtSuFPReadTout>\\d+),(?P<BtSuFPReadNFnd>\\d+),(?P<BtSuFPReadFltr>\\d+)\\) write \\((?P<BtSuFPWriteOk>\\d+),(?P<BtSuFPWriteErr>\\d+),(?P<BtSuFPWriteTout>\\d+),(?P<BtSuFPWriteFltr>\\d+)\\) delete \\((?P<BtSuFPDelOk>\\d+),(?P<BtSuFPDelErr>\\d+),(?P<BtSuFPDelTout>\\d+),(?P<BtSuFPDelNFnd>\\d+),(?P<BtSuFPDelFltr>\\d+)\\) udf \\((?P<BtSuFPUdfOk>\\d+),(?P<BtSuFPUdfErr>\\d+),(?P<BtSuFPUdfTout>\\d+),(?P<BtSuFPUdfFltr>\\d+)\\) lang \\((?P<BtSuFPLangRdOk>\\d+),(?P<BtSuFPLangWtOk>\\d+),(?P<BtSuFPLangDlOk>\\d+),(?P<BtSuFPLangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+),(?P<BtSuFPReadFltr>\d+)\) write \((?P<BtSuFPWriteOk>\d+),(?P<BtSuFPWriteErr>\d+),(?P<BtSuFPWriteTout>\d+),(?P<BtSuFPWriteFltr>\d+)\) delete \((?P<BtSuFPDelOk>\d+),(?P<BtSuFPDelErr>\d+),(?P<BtSuFPDelTout>\d+),(?P<BtSuFPDelNFnd>\d+),(?P<BtSuFPDelFltr>\d+)\) udf \((?P<BtSuFPUdfOk>\d+),(?P<BtSuFPUdfErr>\d+),(?P<BtSuFPUdfTout>\d+),(?P<BtSuFPUdfFltr>\d+)\) lang \((?P<BtSuFPLangRdOk>\d+),(?P<BtSuFPLangWtOk>\d+),(?P<BtSuFPLangDlOk>\d+),(?P<BtSuFPLangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} xdr-client: write \\((?P<XdrClWrOk>\\d+),(?P<XdrClWrErr>\\d+),(?P<XdrClWrTout>\\d+)\\) delete \\((?P<XdrClDelOk>\\d+),(?P<XdrClDelErr>\\d+),(?P<XdrClDelTout>\\d+),(?P<XdrClDelNFou>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-client: write \((?P<XdrClWrOk>\d+),(?P<XdrClWrErr>\d+),(?P<XdrClWrTout>\d+)\) delete \((?P<XdrClDelOk>\d+),(?P<XdrClDelErr>\d+),(?P<XdrClDelTout>\d+),(?P<XdrClDelNFou>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} Records: (?P<nsupMasterObj>\\d+), (?P<nsupNonExpirabl>\\d+) 0-vt, (?P<nsupExpireTotal>\\d+)\\((?P<nsupExpireNow>\\d+)\\) expired, (?P<nsupEvictTotal>\\d+)\\((?P<nsupEvictNow>\\d+)\\) evicted, (?P<nsupSetDelTotal>\\d+)\\((?P<nsupSetDelNow>\\d+)\\) set deletes. Evict ttl: (?P<nsupEvictTtl>[0-9\\-]+). Waits: (?P<nsupSetWaits>\\d+),(?P<nsupClearWaits>\\d+),(?P<nsupGeneWaits>\\d+). Total time: (?P<nsupTotalMs>\\d+) ms"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} Records: (?P<nsupMasterObj>\d+), (?P<nsupNonExpirabl>\d+) 0-vt, (?P<nsupExpireTotal>\d+)\((?P<nsupExpireNow>\d+)\) expired, (?P<nsupEvictTotal>\d+)\((?P<nsupEvictNow>\d+)\) evicted, (?P<nsupSetDelTotal>\d+)\((?P<nsupSetDelNow>\d+)\) set deletes. Evict ttl: (?P<nsupEvictTtl>[0-9\\-]+). Waits: (?P<nsupSetWaits>\d+),(?P<nsupClearWaits>\d+),(?P<nsupGeneWaits>\d+). Total time: (?P<nsupTotalMs>\d+) ms$
# Giai line ==> - "(?P<restart>\\d+) build (?P<build>[^ ]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<restart>\d+) build (?P<build>[^ ]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\\d+) expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\) expected-appeals (?P<reAppeals>\\d+) dead-partitions (?P<reDead>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+) dead-partitions (?P<reDead>\d+)$
# Giai line ==> - " \\((?P<warnCtx>[^)]+)\\): \\((?P<warnC>[^)]+)\\) \\(repeated:(?P<repeated>\\d+)\\) (?P<warnMessage>.+$)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+\((?P<warnCtx>[^)]+)\): \((?P<warnC>[^)]+)\) \(repeated:(?P<repeated>\d+)\) (?P<warnMessage>.+$)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\\d+) expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\) expected-appeals (?P<reAppeals>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+)$
# Giai line ==> - re: "( |\\(hist\\.c:\\d+\\))( \\(.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+re: ( |\(hist\\.c:\d+\))( \(.*)$
# Giai line ==> - "batch-index: batches \\((?P<BatchSuccess>\\d+),(?P<BatchError>\\d+),(?P<BatchTimeout>\\d+)\\) delays (?P<BatchDelay>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+batch-index: batches \((?P<BatchSuccess>\d+),(?P<BatchError>\d+),(?P<BatchTimeout>\d+)\) delays (?P<BatchDelay>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} xdr-tomb-raid-done: dropped (?P<xdr5tombDrop>\\d+) total-ms (?P<xdr5tombMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-tomb-raid-done: dropped (?P<xdr5tombDrop>\d+) total-ms (?P<xdr5tombMs>\d+)$
# Giai line ==> - "fds: proto \\((?P<ProtoConnNow>\\d+),(?P<ProtoConnOpen>\\d+),(?P<ProtoConnClose>\\d+)\\) heartbeat \\((?P<HBConnNow>\\d+),(?P<HBConnOpen>\\d+),(?P<HBConnClose>\\d+)\\) fabric \\((?P<FabricConnNow>\\d+),(?P<FabricConnOpen>\\d+),(?P<FabricConnClose>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+fds: proto \((?P<ProtoConnNow>\d+),(?P<ProtoConnOpen>\d+),(?P<ProtoConnClose>\d+)\) heartbeat \((?P<HBConnNow>\d+),(?P<HBConnOpen>\d+),(?P<HBConnClose>\d+)\) fabric \((?P<FabricConnNow>\d+),(?P<FabricConnOpen>\d+),(?P<FabricConnClose>\d+)\)$
# Giai line ==> - "(?P<signal>[^ ]+) received, aborting Aerospike Enterprise Edition (?P<stop>\\d+) build (?P<build>.+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, aborting Aerospike Enterprise Edition (?P<stop>\d+) build (?P<build>.+)$
# Giai line ==> - "early-fail: demarshal (?P<EarlyFailDemar>\\d+) tsvc-client (?P<EarlyFailTsvc>\\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} nsup-start: expire-threads (?P<nsupExpireThrds>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-start: expire-threads (?P<nsupExpireThrds>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} breached stop-writes limit \\((?P<stopWrReason>[^)]+)\\), sys-memory pct:(?P<stopWrSysMemPct>\\d+), indexes-memory sz:(?P<stopWrIdxMemSz>\\d+) \\((?P<stopWrIdx>\\d+) + (?P<stopWrSetIdx>\\d+) + (?P<stopWrSetSIdx>\\d+)\\), data avail-pct:(?P<stopWrDatAvail>\\d+) used-pct:(?P<stopWrUsed>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} breached stop-writes limit \((?P<stopWrReason>[^)]+)\), sys-memory pct:(?P<stopWrSysMemPct>\d+), indexes-memory sz:(?P<stopWrIdxMemSz>\d+) \((?P<stopWrIdx>\d+) + (?P<stopWrSetIdx>\d+) + (?P<stopWrSetSIdx>\d+)\), data avail-pct:(?P<stopWrDatAvail>\d+) used-pct:(?P<stopWrUsed>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\\d+) expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\) expected-appeals (?P<reAppeals>\\d+) unavailable-partitions (?P<reUnavail>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: regime (?P<reRegime>\d+) expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\) expected-appeals (?P<reAppeals>\d+) unavailable-partitions (?P<reUnavail>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+)$
# Giai line ==> - "early-fail: demarshal (?P<EarlyFailDemar>\\d+) tsvc-client (?P<EarlyFailTsvc>\\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+early-fail: demarshal (?P<EarlyFailDemar>\d+) tsvc-client (?P<EarlyFailTsvc>\d+) tsvc-from-proxy (?P<EarlyFailFrmPrx>\d+) tsvc-batch-sub (?P<EarlyFailBchSub>\d+) tsvc-from-proxy-batch-sub (?P<EarlyFFPBchSub>\d+) tsvc-udf-sub (?P<EarlyFailUdfSub>\d+)$
# Giai line ==> - "[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3} " # with ms and timezone shift
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}$
# Giai line ==> - "{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\\d+) index-bytes (?P<NsMemIndexBytes>\\d+) sindex-bytes (?P<NsMemSindexByte>\\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} memory-usage: total-bytes (?P<NsMemTotalBytes>\d+) index-bytes (?P<NsMemIndexBytes>\d+) sindex-bytes (?P<NsMemSindexByte>\d+) used-pct (?P<NsMemUsedPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} query: basic \\((?P<QueryBasicOk>\\d+),(?P<QueryBasicAbrt>\\d+)\\) aggr \\((?P<QueryAggrOk>\\d+),(?P<QueryAggrAbrt>\\d+)\\) udf-bg \\((?P<QueryUdfOk>\\d+),(?P<QueryUdfErr>\\d+)\\) ops-bg \\((?P<QueryOpsOk>\\d+),(?P<QueryOpsErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} batch-sub: tsvc \\((?P<BtcSubTsvcErr>\\d+),(?P<BtcSubTsvcTout>\\d+)\\) proxy \\((?P<BtcSubPrxyOk>\\d+),(?P<BtcSubPrxyErr>\\d+),(?P<BtcSubPrxyTout>\\d+)\\) read \\((?P<BtcSubReadOk>\\d+),(?P<BtcSubReadErr>\\d+),(?P<BtcSubReadTout>\\d+),(?P<BtcSubReadNFnd>\\d+),(?P<BtcSubReadFltr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+),(?P<BtcSubReadFltr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\\d+) client-read (?P<ResmitRead>\\d+) client-write \\((?P<ResmitWrtDup>\\d+),(?P<ResmitWrtRepl>\\d+)\\) client-delete \\((?P<ResmitDelDup>\\d+),(?P<ResmitDelRepl>\\d+)\\) client-udf \\((?P<ResmitUdfDup>\\d+),(?P<ResmitRepl>\\d+)\\) batch-sub (?P<ResmitBtchDup>\\d+) udf-sub \\((?P<ResmitUdfDupSub>\\d+),(?P<ResmitUdfRepl>\\d+)\\) nsup (?P<ResmitNsup>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) client-read (?P<ResmitRead>\d+) client-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) client-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) client-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\) nsup (?P<ResmitNsup>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} sindex-pmem-usage: used-bytes (?P<SdxPmemUseByte>\\d+) used-pct (?P<SdxPmemUsePct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-pmem-usage: used-bytes (?P<SdxPmemUseByte>\d+) used-pct (?P<SdxPmemUsePct>\d+)$
# Giai line ==> - "xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\\d+) throughput (?P<xdr5throughput>\\d+) latency-ms (?P<xdr5latencyms>\\d+) in-queue (?P<xdr5inqueue>\\d+) in-progress (?P<xdr5outstanding>\\d+) complete \\((?P<xdr5DoneOk>\\d+),(?P<xdr5DoneAbandon>\\d+),(?P<xdr5DoneNotFnd>\\d+),(?P<xdr5DoneFOut>\\d+)\\) retries \\((?P<xdr5RetrConnRst>\\d+),(?P<xdr5RetrDest>\\d+)\\) recoveries \\((?P<xdr5Recov>\\d+),(?P<xdr5RecovPend>\\d+)\\) hot-keys (?P<xdr5HotKeys>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} sindex-gc: Processed: (?P<sindexGcProc>\\d+), found:(?P<sindexGcFound>\\d+), deleted: (?P<sindexGcDel>\\d+): Total time: (?P<sindexGcMs>\\d+) ms"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-gc: Processed: (?P<sindexGcProc>\d+), found:(?P<sindexGcFound>\d+), deleted: (?P<sindexGcDel>\d+): Total time: (?P<sindexGcMs>\d+) ms$
# Giai line ==> - "{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\\d+) xdr \\((?P<TombXdr>\\d+),(?P<TombXdrCem>\\d+)\\) master (?P<TombMaster>\\d+) prole (?P<TombProle>\\d+) non-replica (?P<TombNonRepl>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} tombstones: all (?P<TombAll>\d+) xdr \((?P<TombXdr>\d+),(?P<TombXdrCem>\d+)\) master (?P<TombMaster>\d+) prole (?P<TombProle>\d+) non-replica (?P<TombNonRepl>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\\d+) expire-threads (?P<nsupExpireThrds>\\d+) master-objects \\((?P<nsupMasterObj>\\d+),(?P<nsupNonExpirabl>\\d+)\\) expired \\((?P<nsupExpireTotal>\\d+),(?P<nsupExpireNow>\\d+)\\) evicted \\((?P<nsupEvictTotal>\\d+),(?P<nsupEvictNow>\\d+)\\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) waits \\((?P<nsupGeneWaits>\\d+),(?P<nsupClearWaits>\\d+)\\) total-ms (?P<nsupTotalMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} nsup-done: evict-threads (?P<nsupEvictThrds>\d+) expire-threads (?P<nsupExpireThrds>\d+) master-objects \((?P<nsupMasterObj>\d+),(?P<nsupNonExpirabl>\d+)\) expired \((?P<nsupExpireTotal>\d+),(?P<nsupExpireNow>\d+)\) evicted \((?P<nsupEvictTotal>\d+),(?P<nsupEvictNow>\d+)\) evict-ttl (?P<nsupEvictTtl>[0-9\\-]+) waits \((?P<nsupGeneWaits>\d+),(?P<nsupClearWaits>\d+)\) total-ms (?P<nsupTotalMs>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} scan: basic \\((?P<ScanBasicOk>\\d+),(?P<ScanBasicErr>\\d+),(?P<ScanBasicAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\)$
# Giai line ==> - "histogram dump: {(?P<Namespace>[^}]+)}-(?P<Histogram>[^ ]+) \\((?P<total>\\d+) total\\) msec *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<Histogram>[^ ]+) \((?P<total>\d+) total\) msec *(?P<histogram>.*)$
# Giai line ==> - "histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramSize>[^ ]+) \\((?P<total>\\d+) total\\) bytes *(?P<histogram>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+histogram dump: {(?P<Namespace>[^}]+)}-(?P<HistogramSize>[^ ]+) \((?P<total>\d+) total\) bytes *(?P<histogram>.*)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} special-errors: key-busy (?P<ErrKeyBusy>\\d+) record-too-big (?P<ErrRecTooBig>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} special-errors: key-busy (?P<ErrKeyBusy>\d+) record-too-big (?P<ErrRecTooBig>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} xdr-from-proxy: write \\((?P<XdrWrFrPrxOk>\\d+),(?P<XdrWrFrPrxErr>\\d+),(?P<XdrWrFrPrxTout>\\d+)\\) delete \\((?P<XdrDelFrPrxOk>\\d+),(?P<XdrDelFrPrxErr>\\d+),(?P<XdrDelFrPrxTout>\\d+),(?P<XdrDelFrPrxNFou>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-from-proxy: write \((?P<XdrWrFrPrxOk>\d+),(?P<XdrWrFrPrxErr>\d+),(?P<XdrWrFrPrxTout>\d+)\) delete \((?P<XdrDelFrPrxOk>\d+),(?P<XdrDelFrPrxErr>\d+),(?P<XdrDelFrPrxTout>\d+),(?P<XdrDelFrPrxNFou>\d+)\)$
# Giai line ==> - "system: total-cpu-pct (?P<TotalCpuPct>\\d+) user-cpu-pct (?P<UserCpuPct>\\d+) kernel-cpu-pct (?P<KernelCpuPct>\\d+) free-mem-kbytes (?P<FreeMemKB>\\d+) free-mem-pct (?P<FreeMemPct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+system: total-cpu-pct (?P<TotalCpuPct>\d+) user-cpu-pct (?P<UserCpuPct>\d+) kernel-cpu-pct (?P<KernelCpuPct>\d+) free-mem-kbytes (?P<FreeMemKB>\d+) free-mem-pct (?P<FreeMemPct>\d+)$
# Giai line ==> - "allowing (?P<MigraFillCt>\\d+) fill-migrations after (?P<MigraFillSec>\\d+) seconds delay"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+allowing (?P<MigraFillCt>\d+) fill-migrations after (?P<MigraFillSec>\d+) seconds delay$
# Giai line ==> - "skew-ms (?P<ClockSkewMs>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+skew-ms (?P<ClockSkewMs>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\\d+) all-read (?P<ResmitRead>\\d+) all-write \\((?P<ResmitWrtDup>\\d+),(?P<ResmitWrtRepl>\\d+)\\) all-delete \\((?P<ResmitDelDup>\\d+),(?P<ResmitDelRepl>\\d+)\\) all-udf \\((?P<ResmitUdfDup>\\d+),(?P<ResmitRepl>\\d+)\\) all-batch-sub (?P<ResmitBtchDup>\\d+) udf-sub \\((?P<ResmitUdfDupSub>\\d+),(?P<ResmitUdfRepl>\\d+)\\) ops-sub \\((?P<ResmitOpsDup>\\d+),(?P<ResmitOpsRepl>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) all-read (?P<ResmitRead>\d+) all-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) all-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) all-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) all-batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\) ops-sub \((?P<ResmitOpsDup>\d+),(?P<ResmitOpsRepl>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\\d+) throughput (?P<xdr5throughput>\\d+) in-queue (?P<xdr5inqueue>\\d+) in-progress (?P<xdr5outstanding>\\d+) complete \\((?P<xdr5DoneOk>\\d+),(?P<xdr5DoneAbandon>\\d+),(?P<xdr5DoneNotFnd>\\d+),(?P<xdr5DoneFOut>\\d+)\\) retries \\((?P<xdr5RetrNoNode>\\d+),(?P<xdr5RetrConnRst>\\d+),(?P<xdr5RetrDest>\\d+)\\) recoveries \\((?P<xdr5Recov>\\d+),(?P<xdr5RecovPend>\\d+)\\) hot-keys (?P<xdr5HotKeys>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \\((?P<BtSuFPTsvcErr>\\d+),(?P<BtSuFPTsvcTout>\\d+)\\) read \\((?P<BtSuFPReadOk>\\d+),(?P<BtSuFPReadErr>\\d+),(?P<BtSuFPReadTout>\\d+),(?P<BtSuFPReadNFnd>\\d+),(?P<BtSuFPReadFltr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy-batch-sub: tsvc \((?P<BtSuFPTsvcErr>\d+),(?P<BtSuFPTsvcTout>\d+)\) read \((?P<BtSuFPReadOk>\d+),(?P<BtSuFPReadErr>\d+),(?P<BtSuFPReadTout>\d+),(?P<BtSuFPReadNFnd>\d+),(?P<BtSuFPReadFltr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} query: basic \\((?P<QueryBasicOk>\\d+),(?P<QueryBasicErr>\\d+),(?P<QueryBasicAbrt>\\d+)\\) aggr \\((?P<QueryAggrOk>\\d+),(?P<QueryAggrErr>\\d+),(?P<QueryAggrAbrt>\\d+)\\) udf-bg \\((?P<QueryUdfOk>\\d+),(?P<QueryUdfErr>\\d+),(?P<QueryUdfAbrt>\\d+)\\) ops-bg \\((?P<QueryOpsOk>\\d+),(?P<QueryOpsErr>\\d+),(?P<QueryOpsAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} query: basic \((?P<QueryBasicOk>\d+),(?P<QueryBasicErr>\d+),(?P<QueryBasicAbrt>\d+)\) aggr \((?P<QueryAggrOk>\d+),(?P<QueryAggrErr>\d+),(?P<QueryAggrAbrt>\d+)\) udf-bg \((?P<QueryUdfOk>\d+),(?P<QueryUdfErr>\d+),(?P<QueryUdfAbrt>\d+)\) ops-bg \((?P<QueryOpsOk>\d+),(?P<QueryOpsErr>\d+),(?P<QueryOpsAbrt>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} sindex-usage: used-bytes (?P<sidxUsedBytes>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} sindex-usage: used-bytes (?P<sidxUsedBytes>\d+)$
# Giai line ==> - "quiesced this (?P<thisQuiesce>\\d+) node"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+quiesced this (?P<thisQuiesce>\d+) node$
# Giai line ==> - "{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\\d+) dup-res \\((?P<ResmitRead>\\d+),(?P<ResmitWrtDup>\\d+),(?P<ResmitDelDup>\\d+),(?P<ResmitUdfDupSub>\\d+),(?P<ResmitBRDup>\\d+),(?P<ResmitBWDup>\\d+),(?P<ResmitBDDup>\\d+),(?P<ResmitBUDup>\\d+),(?P<ResmitUdfDupSub2>\\d+),(?P<ResmitOpsDup>\\d+)\\) repl-ping \\((?P<ResmitRPRepl>\\d+),(?P<ResmitBPRepl>\\d+)\\) repl-write \\((?P<ResmitWrtRepl>\\d+),(?P<ResmitDelRepl>\\d+),(?P<ResmitRepl>\\d+),(?P<ResmitBWRepl>\\d+),(?P<ResmitBDRepl>\\d+),(?P<ResmitBURepl>\\d+),(?P<ResmitUdfRepl>\\d+),(?P<ResmitOpsRepl>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) dup-res \((?P<ResmitRead>\d+),(?P<ResmitWrtDup>\d+),(?P<ResmitDelDup>\d+),(?P<ResmitUdfDupSub>\d+),(?P<ResmitBRDup>\d+),(?P<ResmitBWDup>\d+),(?P<ResmitBDDup>\d+),(?P<ResmitBUDup>\d+),(?P<ResmitUdfDupSub2>\d+),(?P<ResmitOpsDup>\d+)\) repl-ping \((?P<ResmitRPRepl>\d+),(?P<ResmitBPRepl>\d+)\) repl-write \((?P<ResmitWrtRepl>\d+),(?P<ResmitDelRepl>\d+),(?P<ResmitRepl>\d+),(?P<ResmitBWRepl>\d+),(?P<ResmitBDRepl>\d+),(?P<ResmitBURepl>\d+),(?P<ResmitUdfRepl>\d+),(?P<ResmitOpsRepl>\d+)\)$
# Giai line ==> - "(?P<signal>[^ ]+) received, (?P<stop>\\d+) starting normal shutdown"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, (?P<stop>\d+) starting normal shutdown$
# Giai line ==> - "(?P<signal>[^ ]+) received, shutting down Aerospike Enterprise Edition (?P<stop>\\d+) build (?P<build>.+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+(?P<signal>[^ ]+) received, shutting down Aerospike Enterprise Edition (?P<stop>\d+) build (?P<build>.+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} from-proxy: tsvc \\((?P<FrPrxyTsvcErr>\\d+),(?P<FrPrxyTsvcTout>\\d+)\\) read \\((?P<FrPrxyReadOk>\\d+),(?P<FrPrxyReadErr>\\d+),(?P<FrPrxyReadTout>\\d+),(?P<FrPrxyReadNFnd>\\d+)\\) write \\((?P<FrPrxyWrtOk>\\d+),(?P<FrPrxyWrtErr>\\d+),(?P<FrPrxyWrtTout>\\d+)\\) delete \\((?P<FrPrxyDelOk>\\d+),(?P<FrPrxyDelErr>\\d+),(?P<FrPrxyDelTout>\\d+),(?P<FrPrxyDelNFnd>\\d+)\\) udf \\((?P<FrPrxyUdfOk>\\d+),(?P<FrPrxyUdfErr>\\d+),(?P<FrPrxyUdfTout>\\d+)\\) lang \\((?P<FrPrxyLangRead>\\d+),(?P<FrPrxyLangWrite>\\d+),(?P<FrPrxyLangDel>\\d+),(?P<FrPrxylangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} from-proxy: tsvc \((?P<FrPrxyTsvcErr>\d+),(?P<FrPrxyTsvcTout>\d+)\) read \((?P<FrPrxyReadOk>\d+),(?P<FrPrxyReadErr>\d+),(?P<FrPrxyReadTout>\d+),(?P<FrPrxyReadNFnd>\d+)\) write \((?P<FrPrxyWrtOk>\d+),(?P<FrPrxyWrtErr>\d+),(?P<FrPrxyWrtTout>\d+)\) delete \((?P<FrPrxyDelOk>\d+),(?P<FrPrxyDelErr>\d+),(?P<FrPrxyDelTout>\d+),(?P<FrPrxyDelNFnd>\d+)\) udf \((?P<FrPrxyUdfOk>\d+),(?P<FrPrxyUdfErr>\d+),(?P<FrPrxyUdfTout>\d+)\) lang \((?P<FrPrxyLangRead>\d+),(?P<FrPrxyLangWrite>\d+),(?P<FrPrxyLangDel>\d+),(?P<FrPrxylangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} udf-sub: tsvc \\((?P<UdfSubTsvcErr>\\d+),(?P<UdfSubTsvcTout>\\d+)\\) udf \\((?P<UdfSubUdfOk>\\d+),(?P<UdfSubUdfErr>\\d+),(?P<UdfSubUdfTout>\\d+),(?P<UdfSubUdfFOut>\\d+)\\) lang \\((?P<UdfSubLangRdOk>\\d+),(?P<UdfSubLangWrOk>\\d+),(?P<UdfSubLangDelOk>\\d+),(?P<UdfSubLangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} udf-sub: tsvc \((?P<UdfSubTsvcErr>\d+),(?P<UdfSubTsvcTout>\d+)\) udf \((?P<UdfSubUdfOk>\d+),(?P<UdfSubUdfErr>\d+),(?P<UdfSubUdfTout>\d+),(?P<UdfSubUdfFOut>\d+)\) lang \((?P<UdfSubLangRdOk>\d+),(?P<UdfSubLangWrOk>\d+),(?P<UdfSubLangDelOk>\d+),(?P<UdfSubLangErr>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write-q (?P<WriteQ>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\) tomb-raider-read \\((?P<TombDevRd>\\d+),(?P<TombDevRdSec>[0-9\\.]+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) tomb-raider-read \((?P<TombDevRd>\d+),(?P<TombDevRdSec>[0-9\\.]+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write-q (?P<WriteQ>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\) shadow-write-q (?P<ShadowWriteQ>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\) shadow-write-q (?P<ShadowWriteQ>\d+)$
# Giai line ==> - "xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\\d+) lag (?P<xdr5lag>\\d+) throughput (?P<xdr5throughput>\\d+) latency-ms (?P<xdr5latencyms>\\d+) in-queue (?P<xdr5inqueue>\\d+) in-progress (?P<xdr5outstanding>\\d+) complete \\((?P<xdr5DoneOk>\\d+),(?P<xdr5DoneAbandon>\\d+),(?P<xdr5DoneNotFnd>\\d+),(?P<xdr5DoneFOut>\\d+)\\) retries \\((?P<xdr5RetrNoNode>\\d+),(?P<xdr5RetrConnRst>\\d+),(?P<xdr5RetrDest>\\d+)\\) recoveries \\((?P<xdr5Recov>\\d+),(?P<xdr5RecovPend>\\d+)\\) hot-keys (?P<xdr5HotKeys>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): nodes (?P<xdr5nodes>\d+) lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
# Giai line ==> - "xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\\d+) throughput (?P<xdr5throughput>\\d+) latency-ms (?P<xdr5latencyms>\\d+) in-queue (?P<xdr5inqueue>\\d+) outstanding (?P<xdr5outstanding>\\d+) complete \\((?P<xdr5DoneOk>\\d+),(?P<xdr5DoneAbandon>\\d+),(?P<xdr5DoneNotFnd>\\d+),(?P<xdr5DoneFOut>\\d+)\\) retries \\((?P<xdr5RetrConnRst>\\d+),(?P<xdr5RetrDest>\\d+)\\) recoveries \\((?P<xdr5Recov>\\d+),(?P<xdr5RecovPend>\\d+)\\) hot-keys (?P<xdr5HotKeys>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) outstanding (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
# Giai line ==> - "[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2} " # with timezone shift
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+[A-Z][a-z]{2} [0-9]{2} [0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<quiesced>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<quiesced>\d+)$
# Giai line ==> - "config-set (?P<configset>\\d+) command completed: params (?P<command>.*)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+config-set (?P<configset>\d+) command completed: params (?P<command>.*)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \\((?P<reTx>\\d+),(?P<reRx>\\d+),(?P<reSig>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} rebalanced: expected-migrations \((?P<reTx>\d+),(?P<reRx>\d+),(?P<reSig>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} migrations: remaining \\((?P<MigraRemainTx>\\d+),(?P<MigraRemainRx>\\d+)\\) active \\((?P<MigraActiveTx>\\d+),(?P<MigraActiveRx>\\d+)\\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} migrations: remaining \((?P<MigraRemainTx>\d+),(?P<MigraRemainRx>\d+)\) active \((?P<MigraActiveTx>\d+),(?P<MigraActiveRx>\d+)\) complete-pct (?P<MigraCompletPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} scan: basic \\((?P<ScanBasicOk>\\d+),(?P<ScanBasicErr>\\d+),(?P<ScanBasicAbrt>\\d+)\\) aggr \\((?P<ScanAggrOk>\\d+),(?P<ScanAggrErr>\\d+),(?P<ScanAggrAbrt>\\d+)\\) udf-bg \\((?P<ScanUdfOk>\\d+),(?P<ScanUdfErr>\\d+),(?P<ScanUdfAbrt>\\d+)\\) ops-bg \\((?P<ScanOpsOk>\\d+),(?P<ScanOpsErr>\\d+),(?P<ScanOpsAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\) ops-bg \((?P<ScanOpsOk>\d+),(?P<ScanOpsErr>\d+),(?P<ScanOpsAbrt>\d+)\)$
# Giai line ==> - "Jan 02 15:04:05 "
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+Jan 02 15:04:05$
# Giai line ==> - "{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\\d+) all-read (?P<ResmitRead>\\d+) all-write \\((?P<ResmitWrtDup>\\d+),(?P<ResmitWrtRepl>\\d+)\\) all-delete \\((?P<ResmitDelDup>\\d+),(?P<ResmitDelRepl>\\d+)\\) all-udf \\((?P<ResmitUdfDup>\\d+),(?P<ResmitRepl>\\d+)\\) all-batch-sub (?P<ResmitBtchDup>\\d+) udf-sub \\((?P<ResmitUdfDupSub>\\d+),(?P<ResmitUdfRepl>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} retransmits: migration (?P<ResmitMigra>\d+) all-read (?P<ResmitRead>\d+) all-write \((?P<ResmitWrtDup>\d+),(?P<ResmitWrtRepl>\d+)\) all-delete \((?P<ResmitDelDup>\d+),(?P<ResmitDelRepl>\d+)\) all-udf \((?P<ResmitUdfDup>\d+),(?P<ResmitRepl>\d+)\) all-batch-sub (?P<ResmitBtchDup>\d+) udf-sub \((?P<ResmitUdfDupSub>\d+),(?P<ResmitUdfRepl>\d+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} pmem-usage: used-bytes (?P<PmemUseByte>\\d+) avail-pct (?P<PmemAvailPct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} pmem-usage: used-bytes (?P<PmemUseByte>\d+) avail-pct (?P<PmemAvailPct>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+) cache-read-pct (?P<DevCacheReadPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} device-usage: used-bytes (?P<DevUsedBytes>\d+) avail-pct (?P<DevAvailPct>[0-9\\.]+) cache-read-pct (?P<DevCacheReadPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\\d+) free-wblocks (?P<FreeWBlocks>\\d+) write-q (?P<WriteQ>\\d+) write \\((?P<Writes>\\d+),(?P<WritePerSec>[0-9\\.]+)\\) defrag-q (?P<DefragQ>\\d+) defrag-read \\((?P<DefragR>\\d+),(?P<DefragRPerSec>[0-9\\.]+)\\) defrag-write \\((?P<DefragW>\\d+),(?P<DefragWPerSec>[0-9\\.]+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} (?P<Device>[^:]+): used-bytes (?P<UsedBytes>\d+) free-wblocks (?P<FreeWBlocks>\d+) write-q (?P<WriteQ>\d+) write \((?P<Writes>\d+),(?P<WritePerSec>[0-9\\.]+)\) defrag-q (?P<DefragQ>\d+) defrag-read \((?P<DefragR>\d+),(?P<DefragRPerSec>[0-9\\.]+)\) defrag-write \((?P<DefragW>\d+),(?P<DefragWPerSec>[0-9\\.]+)\)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\\d+) used-pct (?P<IdxFlashUsePct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} index-flash-usage: used-bytes (?P<IdxFlashUseByte>\d+) used-pct (?P<IdxFlashUsePct>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} appeals: remaining-rx (?P<ApplRemainRx>\\d+) active \\((?P<ApplActTx>\\d+),(?P<ApplActRx>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} appeals: remaining-rx (?P<ApplRemainRx>\d+) active \((?P<ApplActTx>\d+),(?P<ApplActRx>\d+)\)$
# Giai line ==> - "process: cpu-pct (?P<ProcessCpuPct>\\d+) threads \\((?P<ThreadJoin>\\d+),(?P<ThreadDetach>\\d+),(?P<ThreadPoolTot>\\d+),(?P<ThreadPoolAct>\\d+)\\) heap-kbytes \\((?P<HeapKBAlloc>\\d+),(?P<HeapKBActive>\\d+),(?P<HeapKBMapped>\\d+)\\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+process: cpu-pct (?P<ProcessCpuPct>\d+) threads \((?P<ThreadJoin>\d+),(?P<ThreadDetach>\d+),(?P<ThreadPoolTot>\d+),(?P<ThreadPoolAct>\d+)\) heap-kbytes \((?P<HeapKBAlloc>\d+),(?P<HeapKBActive>\d+),(?P<HeapKBMapped>\d+)\) heap-efficiency-pct (?P<HeapEfficPct>[0-9\\.]+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} scan: basic \\((?P<ScanBasicOk>\\d+),(?P<ScanBasicErr>\\d+),(?P<ScanBasicAbrt>\\d+)\\) aggr \\((?P<ScanAggrOk>\\d+),(?P<ScanAggrErr>\\d+),(?P<ScanAggrAbrt>\\d+)\\) udf-bg \\((?P<ScanUdfOk>\\d+),(?P<ScanUdfErr>\\d+),(?P<ScanUdfAbrt>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} scan: basic \((?P<ScanBasicOk>\d+),(?P<ScanBasicErr>\d+),(?P<ScanBasicAbrt>\d+)\) aggr \((?P<ScanAggrOk>\d+),(?P<ScanAggrErr>\d+),(?P<ScanAggrAbrt>\d+)\) udf-bg \((?P<ScanUdfOk>\d+),(?P<ScanUdfErr>\d+),(?P<ScanUdfAbrt>\d+)\)$
# Giai line ==> - "xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\\d+) throughput (?P<xdr5throughput>\\d+) latency-ms (?P<xdr5latencyms>\\d+) in-queue (?P<xdr5inqueue>\\d+) in-progress (?P<xdr5outstanding>\\d+) complete \\((?P<xdr5DoneOk>\\d+),(?P<xdr5DoneAbandon>\\d+),(?P<xdr5DoneNotFnd>\\d+),(?P<xdr5DoneFOut>\\d+)\\) retries \\((?P<xdr5RetrNoNode>\\d+),(?P<xdr5RetrConnRst>\\d+),(?P<xdr5RetrDest>\\d+)\\) recoveries \\((?P<xdr5Recov>\\d+),(?P<xdr5RecovPend>\\d+)\\) hot-keys (?P<xdr5HotKeys>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+xdr-dc (?P<xdr5dc>[^:]+): lag (?P<xdr5lag>\d+) throughput (?P<xdr5throughput>\d+) latency-ms (?P<xdr5latencyms>\d+) in-queue (?P<xdr5inqueue>\d+) in-progress (?P<xdr5outstanding>\d+) complete \((?P<xdr5DoneOk>\d+),(?P<xdr5DoneAbandon>\d+),(?P<xdr5DoneNotFnd>\d+),(?P<xdr5DoneFOut>\d+)\) retries \((?P<xdr5RetrNoNode>\d+),(?P<xdr5RetrConnRst>\d+),(?P<xdr5RetrDest>\d+)\) recoveries \((?P<xdr5Recov>\d+),(?P<xdr5RecovPend>\d+)\) hot-keys (?P<xdr5HotKeys>\d+)$
# Giai line ==> - "in-progress: tsvc-q (?P<TsvcQ>\\d+) info-q (?P<InfoQ>\\d+) nsup-delete-q (?P<NsupDelQ>\\d+) rw-hash (?P<RWHash>\\d+) proxy-hash (?P<ProxyHash>\\d+) tree-gc-q (?P<TreeGcQ>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+in-progress: tsvc-q (?P<TsvcQ>\d+) info-q (?P<InfoQ>\d+) nsup-delete-q (?P<NsupDelQ>\d+) rw-hash (?P<RWHash>\d+) proxy-hash (?P<ProxyHash>\d+) tree-gc-q (?P<TreeGcQ>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} data-usage: used-bytes (?P<dataUsedBytes>\\d+) avail-pct (?P<dataAvailPct>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} data-usage: used-bytes (?P<dataUsedBytes>\d+) avail-pct (?P<dataAvailPct>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} set-index-usage: used-bytes (?P<setidxUsedBytes>\\d+)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} set-index-usage: used-bytes (?P<setidxUsedBytes>\d+)$
# Giai line ==> - "{(?P<Namespace>[^}]+)} batch-sub: tsvc \\((?P<BtcSubTsvcErr>\\d+),(?P<BtcSubTsvcTout>\\d+)\\) proxy \\((?P<BtcSubPrxyOk>\\d+),(?P<BtcSubPrxyErr>\\d+),(?P<BtcSubPrxyTout>\\d+)\\) read \\((?P<BtcSubReadOk>\\d+),(?P<BtcSubReadErr>\\d+),(?P<BtcSubReadTout>\\d+),(?P<BtcSubReadNFnd>\\d+),(?P<BtcSubReadFltr>\\d+)\\) write \\((?P<BtcSubWriteOk>\\d+),(?P<BtcSubWriteErr>\\d+),(?P<BtcSubWriteTout>\\d+),(?P<BtcSubWriteFltr>\\d+)\\) delete \\((?P<BtcSubDelOk>\\d+),(?P<BtcSubDelErr>\\d+),(?P<BtcSubDelTout>\\d+),(?P<BtcSubDelNFnd>\\d+),(?P<BtcSubDelFltr>\\d+)\\) udf \\((?P<BtcSubUdfOk>\\d+),(?P<BtcSubUdfErr>\\d+),(?P<BtcSubUdfTout>\\d+),(?P<BtcSubUdfFltr>\\d+)\\) lang \\((?P<BtcSubLangRdOk>\\d+),(?P<BtcSubLangWtOk>\\d+),(?P<BtcSubLangDlOk>\\d+),(?P<BtcSubLangErr>\\d+)\\)"
^(?P<datetimestamp>\w+ \d+ \d+ \d+:\d+:\d+) (?P<timezone>\S+): (?P<log_level>\S+) \((?P<source>\S+)\): \((?P<source_location>[^)]+)\)\s+{(?P<Namespace>[^}]+)} batch-sub: tsvc \((?P<BtcSubTsvcErr>\d+),(?P<BtcSubTsvcTout>\d+)\) proxy \((?P<BtcSubPrxyOk>\d+),(?P<BtcSubPrxyErr>\d+),(?P<BtcSubPrxyTout>\d+)\) read \((?P<BtcSubReadOk>\d+),(?P<BtcSubReadErr>\d+),(?P<BtcSubReadTout>\d+),(?P<BtcSubReadNFnd>\d+),(?P<BtcSubReadFltr>\d+)\) write \((?P<BtcSubWriteOk>\d+),(?P<BtcSubWriteErr>\d+),(?P<BtcSubWriteTout>\d+),(?P<BtcSubWriteFltr>\d+)\) delete \((?P<BtcSubDelOk>\d+),(?P<BtcSubDelErr>\d+),(?P<BtcSubDelTout>\d+),(?P<BtcSubDelNFnd>\d+),(?P<BtcSubDelFltr>\d+)\) udf \((?P<BtcSubUdfOk>\d+),(?P<BtcSubUdfErr>\d+),(?P<BtcSubUdfTout>\d+),(?P<BtcSubUdfFltr>\d+)\) lang \((?P<BtcSubLangRdOk>\d+),(?P<BtcSubLangWtOk>\d+),(?P<BtcSubLangDlOk>\d+),(?P<BtcSubLangErr>\d+)\)$
