version: '3.7'

services:
  # DNS server for resolving names into individual aerospike nodes.
  # Used, since prometheus exporter requires to connect to individual aerospike nodes.
  aerodns:
    image: davd/docker-ddns:latest
    networks:
    - aeronet
    deploy:
      placement:
        constraints:
        - node.role == manager
    environment:
    - SHARED_SECRET=aerospike
    - ZONE=aerospike.com
    - RECORD_TTL=86400
    ports:
    - "8080:8080"
    - "53:53"
    - "53:53/udp"

  aerospike:
    image: aerospike/aerospike-server-enterprise:latest
    networks:
    - aeronet
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
    labels:
      com.aerospike.description: "This label is for all containers for the Aerospike service"
    command: ["--config-file", "/run/secrets/aerospike.conf"]
    secrets:
    - source: conffile
      target: aerospike.conf
      mode: 0444
    - source: featurekeyfile
      target: features.conf
      mode: 0444

  # Discovery logic, dynamically discover and add aerospike nodes to the cluster.
  # Also adds DNS records for individual aerospike containers to `aerodns` server.
  discoverer:
    image: spkesan/aerospike-tools:latest
    networks:
    - aeronet
    depends_on:
    - aerospike
    entrypoint: ["/run/secrets/discoverer"]
    command: ["--servicename", "aerospike", "-i", "5", "-v", "--master-ip", "${MANAGER_NODE_IP}", "--dns-api-endpoint-port", "8080", "--dns-secret", "aerospike", "--dns-domain", "aero"]
    secrets:
    - source: discovererfile
      target: discoverer
      mode: 0750

  exporter:
    image: aerospike/aerospike-prometheus-exporter:latest
    dns:
    - ${MANAGER_NODE_IP}
    networks:
    - aeronet
    depends_on:
    - aerospike
    labels:
      prometheus-job: "aerospike"
    deploy:
      mode: replicated
      replicas: 3
      endpoint_mode: dnsrr
    environment:
    - AS_HOST=aero{{.Task.Slot}}.aerospike.com
    - AGENT_LOG_LEVEL=debug

  prometheus:
    image: prom/prometheus:latest
    user: root
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
    networks:
    - aeronet
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - source: prometheus_data
      target: /var/lib/prometheus/
      type: volume
    command:
    - --config.file=/run/secrets/prometheus.yaml
    - --storage.tsdb.path=/var/lib/prometheus
    secrets:
    - source: prometheusconf
      target: prometheus.yaml
      mode: 0444
    - source: aerospikerulesfile
      target: aerospike_rules.yaml
      mode: 0444
    ports:
    - 9090:9090

  alertmanager:
    image: prom/alertmanager
    user: root
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
    networks:
    - aeronet
    volumes:
    - source: alertmanager_data
      target: /alertmanager
      type: volume
    command:
    - --config.file=/run/secrets/alertmanager.yaml
    - --storage.path=/alertmanager
    ports:
    - 9093:9093
    secrets:
    - source: alertmanagerconf
      target: alertmanager.yaml
      mode: 0444

  grafana:
    image: grafana/grafana:latest
    user: root
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.role == manager
    networks:
    - aeronet
    volumes:
    - source: ${GRAFANA_DASHBOARDS_DIR}
      target: /var/lib/grafana/dashboards/
      type: bind
    - source: ${GRAFANA_PROVISIONING_DIR}
      target: /etc/grafana/provisioning/
      type: bind
    - source: grafana_data
      target: /var/lib/grafana
      type: volume
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
    - GF_INSTALL_PLUGINS=camptocamp-prometheus-alertmanager-datasource
    ports:
    - "3000:3000"

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data:

networks:
  aeronet:
    driver: overlay
    attachable: true

secrets:
  conffile:
    file: ./aerospike.conf
  discovererfile:
    file: ./discoverer.py
  featurekeyfile:
    file: ${FEATURE_KEY_FILE}
  prometheusconf:
    file: ./prometheus.yaml
  aerospikerulesfile:
    file: ${AEROSPIKE_ALERT_RULES_FILE}
  alertmanagerconf:
    file: ${ALERTMANAGER_CONFIG_FILE}
